ÜP
wC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Configurations\ActorsConfiguration.cs
	namespace 	
	CodeFirst
 
. 
Configurations "
{ 
public 

class 
ActorsConfiguration $
:% &$
IEntityTypeConfiguration' ?
<? @
Actors@ F
>F G
{		 
public

 
void

 
	Configure

 
(

 
EntityTypeBuilder

 /
<

/ 0
Actors

0 6
>

6 7
builder

8 ?
)

? @
{ 	
builder 
. 
HasKey 
( 
e 
=> 
e  !
.! "
ActorId" )
)) *
. 
HasName 
( 
$str %
)% &
;& '
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
ActorId$ +
)+ ,
. 
HasColumnName 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
	Firstname$ -
)- .
. 
HasColumnName 
( 
$str +
)+ ,
;, -
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Lastname$ ,
), -
. 
HasColumnName 
( 
$str *
)* +
;+ ,
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Birthday$ ,
), -
. 
HasColumnName 
( 
$str )
)) *
;* +
builder 
. 
ToTable 
( 
$str $
)$ %
;% &
builder 
. 
HasData 
( 
new 
Actors 
( 
$num 
, 
$str &
,& '
$str( 8
,8 9
Convert: A
.A B

ToDateTimeB L
(L M
$strM Y
)Y Z
)Z [
,[ \
new 
Actors 
( 
$num 
, 
$str '
,' (
$str) 2
,2 3
Convert4 ;
.; <

ToDateTime< F
(F G
$strG S
)S T
)T U
,U V
new 
Actors 
( 
$num 
, 
$str (
,( )
$str* 0
,0 1
Convert2 9
.9 :

ToDateTime: D
(D E
$strE Q
)Q R
)R S
,S T
new 
Actors 
( 
$num 
, 
$str &
,& '
$str( 0
,0 1
Convert2 9
.9 :

ToDateTime: D
(D E
$strE Q
)Q R
)R S
,S T
new 
Actors 
( 
$num 
, 
$str $
,$ %
$str& /
,/ 0
Convert1 8
.8 9

ToDateTime9 C
(C D
$strD P
)P Q
)Q R
,R S
new 
Actors 
( 
$num 
, 
$str %
,% &
$str' 0
,0 1
Convert2 9
.9 :

ToDateTime: D
(D E
$strE Q
)Q R
)R S
,S T
new 
Actors 
( 
$num 
, 
$str %
,% &
$str' /
,/ 0
Convert1 8
.8 9

ToDateTime9 C
(C D
$strD P
)P Q
)Q R
,R S
new   
Actors   
(   
$num   
,   
$str   %
,  % &
$str  ' /
,  / 0
Convert  1 8
.  8 9

ToDateTime  9 C
(  C D
$str  D P
)  P Q
)  Q R
,  R S
new!! 
Actors!! 
(!! 
$num!! 
,!! 
$str!! '
,!!' (
$str!!) 0
,!!0 1
Convert!!2 9
.!!9 :

ToDateTime!!: D
(!!D E
$str!!E Q
)!!Q R
)!!R S
,!!S T
new"" 
Actors"" 
("" 
$num"" 
,"" 
$str"" &
,""& '
$str""( 2
,""2 3
Convert""4 ;
.""; <

ToDateTime""< F
(""F G
$str""G S
)""S T
)""T U
,""U V
new## 
Actors## 
(## 
$num## 
,## 
$str## %
,##% &
$str##' /
,##/ 0
Convert##1 8
.##8 9

ToDateTime##9 C
(##C D
$str##D P
)##P Q
)##Q R
,##R S
new$$ 
Actors$$ 
($$ 
$num$$ 
,$$ 
$str$$ $
,$$$ %
$str$$& /
,$$/ 0
Convert$$1 8
.$$8 9

ToDateTime$$9 C
($$C D
$str$$D P
)$$P Q
)$$Q R
,$$R S
new%% 
Actors%% 
(%% 
$num%% 
,%% 
$str%% *
,%%* +
$str%%, 4
,%%4 5
Convert%%6 =
.%%= >

ToDateTime%%> H
(%%H I
$str%%I U
)%%U V
)%%V W
,%%W X
new&& 
Actors&& 
(&& 
$num&& 
,&& 
$str&& '
,&&' (
$str&&) 2
,&&2 3
Convert&&4 ;
.&&; <

ToDateTime&&< F
(&&F G
$str&&G S
)&&S T
)&&T U
,&&U V
new'' 
Actors'' 
('' 
$num'' 
,'' 
$str'' &
,''& '
$str''( 0
,''0 1
Convert''2 9
.''9 :

ToDateTime'': D
(''D E
$str''E Q
)''Q R
)''R S
,''S T
new(( 
Actors(( 
((( 
$num(( 
,(( 
$str(( '
,((' (
$str(() 1
,((1 2
Convert((3 :
.((: ;

ToDateTime((; E
(((E F
$str((F R
)((R S
)((S T
,((T U
new)) 
Actors)) 
()) 
$num)) 
,)) 
$str)) '
,))' (
$str))) 3
,))3 4
Convert))5 <
.))< =

ToDateTime))= G
())G H
$str))H T
)))T U
)))U V
,))V W
new** 
Actors** 
(** 
$num** 
,** 
$str** $
,**$ %
$str**& 0
,**0 1
Convert**2 9
.**9 :

ToDateTime**: D
(**D E
$str**E Q
)**Q R
)**R S
,**S T
new++ 
Actors++ 
(++ 
$num++ 
,++ 
$str++ '
,++' (
$str++) 0
,++0 1
Convert++2 9
.++9 :

ToDateTime++: D
(++D E
$str++E Q
)++Q R
)++R S
,++S T
new,, 
Actors,, 
(,, 
$num,, 
,,, 
$str,, (
,,,( )
$str,,* 1
,,,1 2
Convert,,3 :
.,,: ;

ToDateTime,,; E
(,,E F
$str,,F R
),,R S
),,S T
,,,T U
new-- 
Actors-- 
(-- 
$num-- 
,-- 
$str-- )
,--) *
$str--+ 1
,--1 2
Convert--3 :
.--: ;

ToDateTime--; E
(--E F
$str--F R
)--R S
)--S T
,--T U
new.. 
Actors.. 
(.. 
$num.. 
,.. 
$str.. +
,..+ ,
$str..- 6
,..6 7
Convert..8 ?
...? @

ToDateTime..@ J
(..J K
$str..K W
)..W X
)..X Y
,..Y Z
new// 
Actors// 
(// 
$num// 
,// 
$str// %
,//% &
$str//' -
,//- .
Convert/// 6
.//6 7

ToDateTime//7 A
(//A B
$str//B N
)//N O
)//O P
,//P Q
new00 
Actors00 
(00 
$num00 
,00 
$str00 &
,00& '
$str00( 1
,001 2
Convert003 :
.00: ;

ToDateTime00; E
(00E F
$str00F R
)00R S
)00S T
,00T U
new11 
Actors11 
(11 
$num11 
,11 
$str11 %
,11% &
$str11' /
,11/ 0
Convert111 8
.118 9

ToDateTime119 C
(11C D
$str11D P
)11P Q
)11Q R
,11R S
new22 
Actors22 
(22 
$num22 
,22 
$str22 %
,22% &
$str22' /
,22/ 0
Convert221 8
.228 9

ToDateTime229 C
(22C D
$str22D P
)22P Q
)22Q R
,22R S
new33 
Actors33 
(33 
$num33 
,33 
$str33 (
,33( )
$str33* 3
,333 4
Convert335 <
.33< =

ToDateTime33= G
(33G H
$str33H T
)33T U
)33U V
,33V W
new44 
Actors44 
(44 
$num44 
,44 
$str44 $
,44$ %
$str44& .
,44. /
Convert440 7
.447 8

ToDateTime448 B
(44B C
$str44C O
)44O P
)44P Q
)44Q R
;44R S
}55 	
}66 
}77 
xC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Configurations\ClientsConfiguration.cs
	namespace 	
	CodeFirst
 
. 
Configurations "
{ 
public 

class  
ClientsConfiguration %
:& '$
IEntityTypeConfiguration( @
<@ A
ClientsA H
>H I
{		 
public

 
void

 
	Configure

 
(

 
EntityTypeBuilder

 /
<

/ 0
Clients

0 7
>

7 8
builder

9 @
)

@ A
{ 	
builder 
. 
HasKey 
( 
e 
=> 
e  !
.! "
ClientId" *
)* +
. 
HasName 
( 
$str &
)& '
;' (
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
ClientId$ ,
), -
. 
HasColumnName 
( 
$str *
)* +
;+ ,
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
	Firstname$ -
)- .
. 
HasColumnName 
( 
$str +
)+ ,
;, -
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Lastname$ ,
), -
. 
HasColumnName 
( 
$str *
)* +
;+ ,
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Birthday$ ,
), -
. 
HasColumnName 
( 
$str )
)) *
;* +
builder 
. 
ToTable 
( 
$str %
)% &
;& '
builder 
. 
HasData 
( 
new 
Clients 
( 
$num 
, 
$str %
,% &
$str' -
,- .
Convert/ 6
.6 7

ToDateTime7 A
(A B
$strB N
)N O
)O P
,P Q
new 
Clients 
( 
$num 
, 
$str &
,& '
$str( 1
,1 2
Convert3 :
.: ;

ToDateTime; E
(E F
$strF R
)R S
)S T
,T U
new 
Clients 
( 
$num 
, 
$str %
,% &
$str' 2
,2 3
Convert4 ;
.; <

ToDateTime< F
(F G
$strG S
)S T
)T U
,U V
new 
Clients 
( 
$num 
, 
$str $
,$ %
$str& /
,/ 0
Convert1 8
.8 9

ToDateTime9 C
(C D
$strD P
)P Q
)Q R
,R S
new 
Clients 
( 
$num 
, 
$str %
,% &
$str' 0
,0 1
Convert2 9
.9 :

ToDateTime: D
(D E
$strE Q
)Q R
)R S
,S T
new 
Clients 
( 
$num 
, 
$str %
,% &
$str' 0
,0 1
Convert2 9
.9 :

ToDateTime: D
(D E
$strE Q
)Q R
)R S
)S T
;T U
}   	
}!! 
}"" ì)
wC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Configurations\CopiesConfiguration.cs
	namespace 	
	CodeFirst
 
. 
Configurations "
{ 
public 

class 
CopiesConfiguration $
:% &$
IEntityTypeConfiguration' ?
<? @
Copies@ F
>F G
{ 
public		 
void		 
	Configure		 
(		 
EntityTypeBuilder		 /
<		/ 0
Copies		0 6
>		6 7
builder		8 ?
)		? @
{

 	
builder 
. 
HasKey 
( 
e 
=> 
e  !
.! "
CopyId" (
)( )
. 
HasName 
( 
$str &
)& '
;' (
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
MovieId$ +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnName 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
CopyId$ *
)* +
. 
HasColumnName 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
	Available$ -
)- .
. 
HasColumnName 
( 
$str *
)* +
;+ ,
builder 
. 
ToTable 
( 
$str $
)$ %
;% &
builder 
. 
HasData 
( 
new 
Copies  &
(& '
$num' (
,( )
$num* +
,+ ,
true- 1
)1 2
,2 3
new 
Copies 
( 
$num 
, 
$num 
,  
false! &
)& '
,' (
new 
Copies 
( 
$num 
, 
$num 
,  
true! %
)% &
,& '
new 
Copies 
( 
$num 
, 
$num 
,  
true! %
)% &
,& '
new 
Copies 
( 
$num 
, 
$num 
,  
false! &
)& '
,' (
new 
Copies 
( 
$num 
, 
$num 
,  
true! %
)% &
,& '
new 
Copies 
( 
$num 
, 
$num 
,  
true! %
)% &
,& '
new   
Copies   
(   
$num   
,   
$num   
,    
false  ! &
)  & '
,  ' (
new!! 
Copies!! 
(!! 
$num!! 
,!! 
$num!! 
,!!  
true!!! %
)!!% &
,!!& '
new"" 
Copies"" 
("" 
$num"" 
,"" 
$num""  
,""  !
false""" '
)""' (
,""( )
new## 
Copies## 
(## 
$num## 
,## 
$num##  
,##  !
true##" &
)##& '
,##' (
new$$ 
Copies$$ 
($$ 
$num$$ 
,$$ 
$num$$  
,$$  !
true$$" &
)$$& '
,$$' (
new%% 
Copies%% 
(%% 
$num%% 
,%% 
$num%%  
,%%  !
true%%" &
)%%& '
,%%' (
new&& 
Copies&& 
(&& 
$num&& 
,&& 
$num&&  
,&&  !
false&&" '
)&&' (
,&&( )
new'' 
Copies'' 
('' 
$num'' 
,'' 
$num''  
,''  !
true''" &
)''& '
,''' (
new(( 
Copies(( 
((( 
$num(( 
,(( 
$num(( !
,((! "
true((# '
)((' (
,((( )
new)) 
Copies)) 
()) 
$num)) 
,)) 
$num)) !
,))! "
false))# (
)))( )
,))) *
new** 
Copies** 
(** 
$num** 
,** 
$num** !
,**! "
true**# '
)**' (
,**( )
new++ 
Copies++ 
(++ 
$num++ 
,++ 
$num++ !
,++! "
true++# '
)++' (
,++( )
new,, 
Copies,, 
(,, 
$num,, 
,,, 
$num,, !
,,,! "
true,,# '
),,' (
),,( )
;,,) *
}-- 	
}.. 
}// ÿ"
zC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Configurations\EmployeesConfiguration.cs
	namespace 	
	CodeFirst
 
. 
Configurations "
{ 
public 

class "
EmployeesConfiguration '
:( )$
IEntityTypeConfiguration* B
<B C
	EmployeesC L
>L M
{ 
public		 
void		 
	Configure		 
(		 
EntityTypeBuilder		 /
<		/ 0
	Employees		0 9
>		9 :
builder		; B
)		B C
{

 	
builder 
. 
HasKey 
( 
e 
=> 
e  !
.! "

EmployeeId" ,
), -
. 
HasName 
( 
$str &
)& '
;' (
builder 
. 
Property 
( 
e 
=> !
e" #
.# $

EmployeeId$ .
). /
. 
HasColumnName 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
	Firstname$ -
)- .
. 

IsRequired 
( 
) 
. 
HasColumnName 
( 
$str +
)+ ,
;, -
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Lastname$ ,
), -
. 

IsRequired 
( 
) 
. 
HasColumnName 
( 
$str *
)* +
;+ ,
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Salary$ *
)* +
. 
HasColumnName 
( 
$str '
)' (
;( )
builder 
. 
ToTable 
( 
$str '
)' (
;( )
builder 
. 
HasData 
( 
new 
	Employees 
{ 

EmployeeId 
=  !
$num" #
,# $
	Firstname% .
=/ 0
$str1 7
,7 8
Lastname9 A
=B C
$strD K
,K L
SalaryM S
=T U
$numV \
,\ ]
City^ b
=c d
$stre o
}o p
,p q
new 
	Employees 
{ 

EmployeeId 
=  !
$num" #
,# $
	Firstname% .
=/ 0
$str1 6
,6 7
Lastname8 @
=A B
$strC L
,L M
SalaryN T
=U V
$numW ]
,] ^
City_ c
=d e
$strf p
}p q
,q r
new 
	Employees 
{   

EmployeeId   
=    !
$num  " #
,  # $
	Firstname  % .
=  / 0
$str  1 8
,  8 9
Lastname  : B
=  C D
$str  E P
,  P Q
Salary  R X
=  Y Z
$num  [ `
,  ` a
City  b f
=  g h
$str  i v
}  v w
,  w x
new!! 
	Employees!! 
{"" 

EmployeeId"" 
=""  !
$num""" #
,""# $
	Firstname""% .
=""/ 0
$str""1 7
,""7 8
Lastname""9 A
=""B C
$str""D L
,""L M
Salary""N T
=""U V
$num""W ]
,""] ^
City""_ c
=""d e
$str""f n
}""n o
,""o p
new## 
	Employees## 
{$$ 

EmployeeId$$ 
=$$  !
$num$$" #
,$$# $
	Firstname$$% .
=$$/ 0
$str$$1 8
,$$8 9
Lastname$$: B
=$$C D
$str$$E N
,$$N O
Salary$$P V
=$$W X
$num$$Y _
,$$_ `
City$$a e
=$$f g
$str$$h p
}$$p q
)%% 
;%% 
}&& 	
}'' 
}(( ö(
wC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Configurations\MoviesConfiguration.cs
	namespace 	
	CodeFirst
 
. 
Configurations "
{ 
public 

class 
MoviesConfiguration $
:% &$
IEntityTypeConfiguration' ?
<? @
Movies@ F
>F G
{ 
public		 
void		 
	Configure		 
(		 
EntityTypeBuilder		 /
<		/ 0
Movies		0 6
>		6 7
builder		8 ?
)		? @
{

 	
builder 
. 
HasKey 
( 
k 
=> 
k  !
.! "
MovieId" )
)) *
. 
HasName 
( 
$str &
)& '
;' (
builder 
. 
HasMany 
( 
e 
=>  
e! "
." #
Copies# )
)) *
. 
WithOne 
( 
e 
=> 
e 
.  
Movie  %
)% &
;& '
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
MovieId$ +
)+ ,
. 
ValueGeneratedOnAdd $
($ %
)% &
. 
HasColumnName 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Title$ )
)) *
. 
HasColumnName 
( 
$str &
)& '
;' (
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
AgeRestriction$ 2
)2 3
. 
HasColumnName 
( 
$str 0
)0 1
;1 2
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Price$ )
)) *
. 
HasColumnName 
( 
$str &
)& '
;' (
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
Year$ (
)( )
.   
HasColumnName   
(   
$str   %
)  % &
;  & '
builder"" 
."" 
ToTable"" 
("" 
$str"" $
)""$ %
;""% &
builder$$ 
.$$ 
HasData$$ 
($$ 
new%% 
Movies%% 
(%% 
$num%% 
,%% 
$str%% @
,%%@ A
$num%%B F
,%%F G
$num%%H J
,%%J K
$num%%L O
)%%O P
,%%P Q
new&& 
Movies&& 
(&& 
$num&& 
,&& 
$str&& ,
,&&, -
$num&&. 2
,&&2 3
$num&&4 6
,&&6 7
$num&&8 <
)&&< =
,&&= >
new'' 
Movies'' 
('' 
$num'' 
,'' 
$str'' *
,''* +
$num'', 0
,''0 1
$num''2 4
,''4 5
$num''6 :
)'': ;
,''; <
new(( 
Movies(( 
((( 
$num(( 
,(( 
$str(( +
,((+ ,
$num((- 1
,((1 2
$num((3 5
,((5 6
$num((7 9
)((9 :
,((: ;
new)) 
Movies)) 
()) 
$num)) 
,)) 
$str)) '
,))' (
$num))) -
,))- .
$num))/ 1
,))1 2
$num))3 5
)))5 6
,))6 7
new** 
Movies** 
(** 
$num** 
,** 
$str** '
,**' (
$num**) -
,**- .
$num**/ 1
,**1 2
$num**3 7
)**7 8
,**8 9
new++ 
Movies++ 
(++ 
$num++ 
,++ 
$str++ %
,++% &
$num++' +
,+++ ,
$num++- /
,++/ 0
$num++1 5
)++5 6
,++6 7
new,, 
Movies,, 
(,, 
$num,, 
,,, 
$str,, ,
,,,, -
$num,,. 2
,,,2 3
$num,,4 6
,,,6 7
$num,,8 =
),,= >
,,,> ?
new-- 
Movies-- 
(-- 
$num-- 
,-- 
$str-- 6
,--6 7
$num--8 <
,--< =
$num--> @
,--@ A
$num--B F
)--F G
,--G H
new.. 
Movies.. 
(.. 
$num.. 
,.. 
$str.. 3
,..3 4
$num..5 9
,..9 :
$num..; =
,..= >
$num..? C
)..C D
)..D E
;..E F
}// 	
}00 
}11 ÛF
xC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Configurations\RentalsConfiguration.cs
	namespace 	
	CodeFirst
 
. 
Configurations "
{ 
public 

class  
RentalsConfiguration %
:& '$
IEntityTypeConfiguration( @
<@ A
RentalsA H
>H I
{		 
public

 
void

 
	Configure

 
(

 
EntityTypeBuilder

 /
<

/ 0
Rentals

0 7
>

7 8
builder

9 @
)

@ A
{ 	
builder 
. 
HasKey 
( 
e 
=> 
new  #
{$ %
e% &
.& '
ClientId' /
,/ 0
e1 2
.2 3
CopyId3 9
}9 :
): ;
. 
HasName 
( 
$str '
)' (
;( )
builder 
. 
HasOne 
( 
e 
=> 
e  !
.! "
Client" (
)( )
. 
WithMany 
( 
e 
=> 
e  
.  !
Rentals! (
)( )
. 
OnDelete 
( 
DeleteBehavior (
.( )
Cascade) 0
)0 1
. 
HasForeignKey 
( 
e  
=>! #
e$ %
.% &
ClientId& .
). /
;/ 0
builder 
. 
HasOne 
( 
e 
=> 
e  !
.! "
Copy" &
)& '
. 
WithMany 
( 
e 
=> 
e  
.  !
Rentals! (
)( )
. 
OnDelete 
( 
DeleteBehavior (
.( )
Cascade) 0
)0 1
. 
HasForeignKey 
( 
e  
=>! #
e$ %
.% &
CopyId& ,
), -
;- .
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
ClientId$ ,
), -
. 

IsRequired 
( 
) 
. 
HasColumnName 
( 
$str *
)* +
;+ ,
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
CopyId$ *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnName 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
DateOfRental$ 0
)0 1
. 
HasColumnName 
( 
$str /
)/ 0
;0 1
builder   
.   
Property   
(   
e   
=>   !
e  " #
.  # $
DateOfReturn  $ 0
)  0 1
.!! 
HasColumnName!! 
(!! 
$str!! /
)!!/ 0
;!!0 1
builder## 
.## 
ToTable## 
(## 
$str## %
)##% &
;##& '
builder%% 
.%% 
HasData%% 
(%% 
new&& 
Rentals&& 
(&& 
$num&& 
,&& 
$num&&  
,&&  !
Convert&&" )
.&&) *

ToDateTime&&* 4
(&&4 5
$str&&5 A
)&&A B
,&&B C
Convert&&D K
.&&K L

ToDateTime&&L V
(&&V W
$str&&W c
)&&c d
)&&d e
,&&e f
new'' 
Rentals'' 
('' 
$num'' 
,'' 
$num''  
,''  !
Convert''" )
.'') *

ToDateTime''* 4
(''4 5
$str''5 A
)''A B
,''B C
Convert''D K
.''K L

ToDateTime''L V
(''V W
$str''W c
)''c d
)''d e
,''e f
new(( 
Rentals(( 
((( 
$num(( 
,(( 
$num((  
,((  !
Convert((" )
.(() *

ToDateTime((* 4
(((4 5
$str((5 A
)((A B
,((B C
Convert((D K
.((K L

ToDateTime((L V
(((V W
$str((W c
)((c d
)((d e
,((e f
new)) 
Rentals)) 
()) 
$num)) 
,)) 
$num))  
,))  !
Convert))" )
.))) *

ToDateTime))* 4
())4 5
$str))5 A
)))A B
,))B C
Convert))D K
.))K L

ToDateTime))L V
())V W
$str))W c
)))c d
)))d e
,))e f
new** 
Rentals** 
(** 
$num** 
,** 
$num**  
,**  !
Convert**" )
.**) *

ToDateTime*** 4
(**4 5
$str**5 A
)**A B
,**B C
Convert**D K
.**K L

ToDateTime**L V
(**V W
$str**W c
)**c d
)**d e
,**e f
new++ 
Rentals++ 
(++ 
$num++ 
,++ 
$num++ !
,++! "
Convert++# *
.++* +

ToDateTime+++ 5
(++5 6
$str++6 B
)++B C
,++C D
Convert++E L
.++L M

ToDateTime++M W
(++W X
$str++X d
)++d e
)++e f
,++f g
new,, 
Rentals,, 
(,, 
$num,, 
,,, 
$num,, !
,,,! "
Convert,,# *
.,,* +

ToDateTime,,+ 5
(,,5 6
$str,,6 B
),,B C
,,,C D
Convert,,E L
.,,L M

ToDateTime,,M W
(,,W X
$str,,X d
),,d e
),,e f
,,,f g
new-- 
Rentals-- 
(-- 
$num-- 
,-- 
$num--  
,--  !
Convert--" )
.--) *

ToDateTime--* 4
(--4 5
$str--5 A
)--A B
,--B C
Convert--D K
.--K L

ToDateTime--L V
(--V W
$str--W c
)--c d
)--d e
,--e f
new.. 
Rentals.. 
(.. 
$num.. 
,.. 
$num..  
,..  !
Convert.." )
...) *

ToDateTime..* 4
(..4 5
$str..5 A
)..A B
,..B C
Convert..D K
...K L

ToDateTime..L V
(..V W
$str..W c
)..c d
)..d e
,..e f
new// 
Rentals// 
(// 
$num// 
,// 
$num// !
,//! "
Convert//# *
.//* +

ToDateTime//+ 5
(//5 6
$str//6 B
)//B C
,//C D
Convert//E L
.//L M

ToDateTime//M W
(//W X
$str//X d
)//d e
)//e f
,//f g
new00 
Rentals00 
(00 
$num00 
,00 
$num00 !
,00! "
Convert00# *
.00* +

ToDateTime00+ 5
(005 6
$str006 B
)00B C
,00C D
Convert00E L
.00L M

ToDateTime00M W
(00W X
$str00X d
)00d e
)00e f
,00f g
new11 
Rentals11 
(11 
$num11 
,11 
$num11  
,11  !
Convert11" )
.11) *

ToDateTime11* 4
(114 5
$str115 A
)11A B
,11B C
Convert11D K
.11K L

ToDateTime11L V
(11V W
$str11W c
)11c d
)11d e
,11e f
new22 
Rentals22 
(22 
$num22 
,22 
$num22  
,22  !
Convert22" )
.22) *

ToDateTime22* 4
(224 5
$str225 A
)22A B
,22B C
Convert22D K
.22K L

ToDateTime22L V
(22V W
$str22W c
)22c d
)22d e
,22e f
new33 
Rentals33 
(33 
$num33 
,33 
$num33 !
,33! "
Convert33# *
.33* +

ToDateTime33+ 5
(335 6
$str336 B
)33B C
,33C D
Convert33E L
.33L M

ToDateTime33M W
(33W X
$str33X d
)33d e
)33e f
)33f g
;33g h
}44 	
}55 
}66 î8
yC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Configurations\StarringConfiguration.cs
	namespace 	
	CodeFirst
 
. 
Configurations "
{ 
public 

class !
StarringConfiguration &
:' ($
IEntityTypeConfiguration) A
<A B
StarringB J
>J K
{ 
public		 
void		 
	Configure		 
(		 
EntityTypeBuilder		 /
<		/ 0
Starring		0 8
>		8 9
builder		: A
)		A B
{

 	
builder 
. 
HasKey 
( 
e 
=> 
new  #
{$ %
e% &
.& '
ActorId' .
,. /
e0 1
.1 2
MovieId2 9
}9 :
): ;
;; <
builder 
. 
HasOne 
( 
e 
=> 
e  !
.! "
Movie" '
)' (
. 
WithMany 
( 
e 
=> 
e  
.  !
Starring! )
)) *
. 
OnDelete 
( 
DeleteBehavior (
.( )
Cascade) 0
)0 1
. 
HasForeignKey 
( 
e  
=>! #
e$ %
.% &
MovieId& -
)- .
;. /
builder 
. 
HasOne 
( 
e 
=> 
e  !
.! "
Actor" '
)' (
. 
WithMany 
( 
e 
=> 
e  
.  !
Starring! )
)) *
. 
OnDelete 
( 
DeleteBehavior (
.( )
Cascade) 0
)0 1
. 
HasForeignKey 
( 
e  
=>! #
e$ %
.% &
ActorId& -
)- .
;. /
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
MovieId$ +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnName 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
e 
=> !
e" #
.# $
ActorId$ +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnName 
( 
$str )
)) *
;* +
builder 
. 
ToTable 
( 
$str &
)& '
;' (
builder!! 
.!! 
HasData!! 
(!! 
new!! 
Starring!!  (
(!!( )
$num!!) *
,!!* +
$num!!, -
)!!- .
,!!. /
new"" 
Starring"" 
("" 
$num"" 
,"" 
$num""  !
)""! "
,""" #
new## 
Starring## 
(## 
$num## 
,## 
$num##  !
)##! "
,##" #
new$$ 
Starring$$ 
($$ 
$num$$ 
,$$ 
$num$$  !
)$$! "
,$$" #
new%% 
Starring%% 
(%% 
$num%% 
,%% 
$num%%  !
)%%! "
,%%" #
new&& 
Starring&& 
(&& 
$num&& 
,&& 
$num&&  !
)&&! "
,&&" #
new'' 
Starring'' 
('' 
$num'' 
,'' 
$num''  !
)''! "
,''" #
new(( 
Starring(( 
((( 
$num(( 
,(( 
$num((  !
)((! "
,((" #
new)) 
Starring)) 
()) 
$num)) 
,)) 
$num))  !
)))! "
,))" #
new** 
Starring** 
(** 
$num** 
,**  
$num**! "
)**" #
,**# $
new++ 
Starring++ 
(++ 
$num++ 
,++  
$num++! "
)++" #
,++# $
new,, 
Starring,, 
(,, 
$num,, 
,,,  
$num,,! "
),," #
,,,# $
new-- 
Starring-- 
(-- 
$num-- 
,--  
$num--! "
)--" #
,--# $
new.. 
Starring.. 
(.. 
$num.. 
,..  
$num..! "
).." #
,..# $
new// 
Starring// 
(// 
$num// 
,//  
$num//! "
)//" #
,//# $
new00 
Starring00 
(00 
$num00 
,00  
$num00! "
)00" #
,00# $
new11 
Starring11 
(11 
$num11 
,11  
$num11! "
)11" #
,11# $
new22 
Starring22 
(22 
$num22 
,22  
$num22! "
)22" #
,22# $
new33 
Starring33 
(33 
$num33 
,33  
$num33! "
)33" #
,33# $
new44 
Starring44 
(44 
$num44 
,44  
$num44! "
)44" #
,44# $
new55 
Starring55 
(55 
$num55 
,55  
$num55! "
)55" #
,55# $
new66 
Starring66 
(66 
$num66 
,66  
$num66! "
)66" #
,66# $
new77 
Starring77 
(77 
$num77 
,77  
$num77! "
)77" #
,77# $
new88 
Starring88 
(88 
$num88 
,88  
$num88! "
)88" #
,88# $
new99 
Starring99 
(99 
$num99 
,99  
$num99! "
)99" #
,99# $
new:: 
Starring:: 
(:: 
$num:: 
,::  
$num::! "
)::" #
,::# $
new;; 
Starring;; 
(;; 
$num;; 
,;;  
$num;;! "
);;" #
,;;# $
new<< 
Starring<< 
(<< 
$num<< 
,<<  
$num<<! "
)<<" #
,<<# $
new== 
Starring== 
(== 
$num== 
,==  
$num==! "
)==" #
,==# $
new>> 
Starring>> 
(>> 
$num>> 
,>>  
$num>>! #
)>># $
,>>$ %
new?? 
Starring?? 
(?? 
$num?? 
,??  
$num??! #
)??# $
)??$ %
;??% &
}@@ 	
}AA 
}BB £
jC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Context\BaseDbContext.cs
	namespace 	
	CodeFirst
 
. 
Context 
{ 
public 

abstract 
class 
BaseDbContext '
:( )
	DbContext* 3
{ 
	protected 
BaseDbContext 
(  
DbContextOptions  0
options1 8
)8 9
:: ;
base< @
(@ A
optionsA H
)H I
{		 	
}

 	
	protected 
BaseDbContext 
(  
)  !
{ 	
} 	
public 
DbSet 
< 
Movies 
> 
Movies #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DbSet 
< 
Copies 
> 
Copies #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DbSet 
< 
Starring 
> 
Starring '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
DbSet 
< 
Actors 
> 
Actors #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DbSet 
< 
Rentals 
> 
Rentals %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DbSet 
< 
	Employees 
> 
	Employees  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
} 
} Ì
nC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Context\PostgresDbContext.cs
	namespace 	
	CodeFirst
 
. 
Context 
{ 
public 

class 
PostgresDbContext "
:# $
BaseDbContext% 2
{ 
public		 
PostgresDbContext		  
(		  !
DbContextOptions		! 1
options		2 9
)		9 :
:		; <
base		= A
(		A B
options		B I
)		I J
{

 	
} 	
public 
PostgresDbContext  
(  !
)! "
{ 	
} 	
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
var 
connectionString  
=! "
Environment# .
.. /"
GetEnvironmentVariable/ E
(E F
$strF e
)e f
;f g
optionsBuilder 
. 
	UseNpgsql $
($ %
connectionString% 5
??% '
throw( -
new. 1"
NullReferenceException2 H
(H I
$") +
$str+ Y
{Y Z
nameofZ `
(` a
connectionStringa q
)q r
}r s
"s t
)t u
)u v
;v w
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
MoviesConfiguration0 C
(C D
)D E
)E F
;F G
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
CopiesConfiguration0 C
(C D
)D E
)E F
;F G
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
ActorsConfiguration0 C
(C D
)D E
)E F
;F G
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /!
StarringConfiguration0 E
(E F
)F G
)G H
;H I
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, / 
RentalsConfiguration0 D
(D E
)E F
)F G
;G H
modelBuilder   
.   
ApplyConfiguration   +
(  + ,
new  , / 
ClientsConfiguration  0 D
(  D E
)  E F
)  F G
;  G H
modelBuilder!! 
.!! 
ApplyConfiguration!! +
(!!+ ,
new!!, /"
EmployeesConfiguration!!0 F
(!!F G
)!!G H
)!!H I
;!!I J
}"" 	
}## 
}$$ Ó
oC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Context\SqlServerDbContext.cs
	namespace 	
	CodeFirst
 
. 
Context 
{ 
public 

class 
SqlServerDbContext #
:$ %
BaseDbContext& 3
{ 
public		 
SqlServerDbContext		 !
(		! "
DbContextOptions		" 2
options		3 :
)		: ;
:		< =
base		> B
(		B C
options		C J
)		J K
{

 	
} 	
public 
SqlServerDbContext !
(! "
)" #
{ 	
} 	
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
var 
connectionString  
=! "
Environment# .
.. /"
GetEnvironmentVariable/ E
(E F
$strF f
)f g
;g h
optionsBuilder 
. 
UseSqlServer '
(' (
connectionString( 8
??( *
throw+ 0
new1 4"
NullReferenceException5 K
(K L
$", .
$str. \
{\ ]
nameof] c
(c d
connectionStringd t
)t u
}u v
"v w
)w x
)x y
;y z
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
MoviesConfiguration0 C
(C D
)D E
)E F
;F G
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
CopiesConfiguration0 C
(C D
)D E
)E F
;F G
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
ActorsConfiguration0 C
(C D
)D E
)E F
;F G
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /!
StarringConfiguration0 E
(E F
)F G
)G H
;H I
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, / 
RentalsConfiguration0 D
(D E
)E F
)F G
;G H
modelBuilder   
.   
ApplyConfiguration   +
(  + ,
new  , / 
ClientsConfiguration  0 D
(  D E
)  E F
)  F G
;  G H
modelBuilder!! 
.!! 
ApplyConfiguration!! +
(!!+ ,
new!!, /"
EmployeesConfiguration!!0 F
(!!F G
)!!G H
)!!H I
;!!I J
}"" 	
}## 
}$$ 
wC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Factories\PostgresDbContextFactory.cs
	namespace 	
	CodeFirst
 
. 
	Factories 
{ 
public 

class $
PostgresDbContextFactory )
:* +'
IDesignTimeDbContextFactory, G
<G H
PostgresDbContextH Y
>Y Z
{		 
public

 
PostgresDbContext

  
CreateDbContext

! 0
(

0 1
string

1 7
[

7 8
]

8 9
args

: >
)

> ?
{ 	
var 
optionsBuilder 
=  
new! $#
DbContextOptionsBuilder% <
<< =
PostgresDbContext= N
>N O
(O P
)P Q
;Q R
var 
connectionString  
=! "
Environment# .
.. /"
GetEnvironmentVariable/ E
(E F
$strF e
)e f
;f g
optionsBuilder 
. 
	UseNpgsql $
($ %
connectionString% 5
??% '
throw( -
new. 1"
NullReferenceException2 H
(H I
$") +
$str+ Y
{Y Z
nameofZ `
(` a
connectionStringa q
)q r
}r s
"s t
)t u
)u v
;v w
return 
new 
PostgresDbContext (
(( )
optionsBuilder) 7
.7 8
Options8 ?
)? @
;@ A
} 	
} 
} 
xC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Factories\SqlServerDbContextFactory.cs
	namespace 	
	CodeFirst
 
. 
	Factories 
{ 
public 

class %
SqlServerDbContextFactory *
:+ ,'
IDesignTimeDbContextFactory- H
<H I
SqlServerDbContextI [
>[ \
{		 
public

 
SqlServerDbContext

 !
CreateDbContext

" 1
(

1 2
string

2 8
[

8 9
]

9 :
args

; ?
)

? @
{ 	
var 
optionsBuilder 
=  
new! $#
DbContextOptionsBuilder% <
<< =
SqlServerDbContext= O
>O P
(P Q
)Q R
;R S
var 
connectionString  
=! "
Environment# .
.. /"
GetEnvironmentVariable/ E
(E F
$strF f
)f g
;g h
optionsBuilder 
. 
UseSqlServer '
(' (
connectionString( 8
??( *
throw+ 0
new1 4"
NullReferenceException5 K
(K L
$", .
$str. \
{\ ]
nameof] c
(c d
connectionStringd t
)t u
}u v
"v w
)w x
)x y
;y z
return 
new 
SqlServerDbContext )
() *
optionsBuilder* 8
.8 9
Options9 @
)@ A
;A B
} 	
} 
} Ð
kC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Interfaces\IRepository.cs
	namespace 	
	CodeFirst
 
. 

Interfaces 
{ 
public 

	interface 
IRepository  
<  !
T! "
>" #
{		 
Task

 
AddAsync

 
(

 
T

 
entity

 
)

 
;

  
void 
Update 
( 
T 
entity 
) 
; 
void 
Delete 
( 
T 
entity 
) 
; 
void 
Delete 
( 

Expression 
< 
Func #
<# $
T$ %
,% &
bool' +
>+ ,
>, -
where. 3
)3 4
;4 5
Task 
< 
T 
> 
GetByIdAsync 
( 
int  
id! #
)# $
;$ %
Task 
< 
T 
> 
GetSingleAsync 
( 

Expression )
<) *
Func* .
<. /
T/ 0
,0 1
bool2 6
>6 7
>7 8
where9 >
)> ?
;? @
Task 
< 
IEnumerable 
< 
T 
> 
> 
GetAllAsync (
(( )
)) *
;* +
Task 
< 
IEnumerable 
< 
T 
> 
> 
GetManyAsync )
() *

Expression* 4
<4 5
Func5 9
<9 :
T: ;
,; <
bool= A
>A B
>B C
whereD I
)I J
;J K
Task 
< 
bool 
> 
SaveChangesAsync #
(# $
)$ %
;% &
} 
} ¢
C:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Migrations\20210227145138_SqlServerInitialMigration.cs
	namespace 	
	CodeFirst
 
. 

Migrations 
{ 
public 

partial 
class %
SqlServerInitialMigration 2
:3 4
	Migration5 >
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
actor_id 
= 
table $
.$ %
Column% +
<+ ,
int, /
>/ 0
(0 1
type1 5
:5 6
$str7 <
,< =
nullable> F
:F G
falseH M
)M N
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B

first_name 
=  
table! &
.& '
Column' -
<- .
string. 4
>4 5
(5 6
type6 :
:: ;
$str< K
,K L
nullableM U
:U V
trueW [
)[ \
,\ ]
	last_name 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
type5 9
:9 :
$str; J
,J K
nullableL T
:T U
trueV Z
)Z [
,[ \
birthday 
= 
table $
.$ %
Column% +
<+ ,
DateTime, 4
>4 5
(5 6
type6 :
:: ;
$str< G
,G H
nullableI Q
:Q R
trueS W
)W X
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 1
,1 2
x3 4
=>5 7
x8 9
.9 :
actor_id: B
)B C
;C D
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
	client_id 
= 
table  %
.% &
Column& ,
<, -
int- 0
>0 1
(1 2
type2 6
:6 7
$str8 =
,= >
nullable? G
:G H
falseI N
)N O
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B

first_name 
=  
table! &
.& '
Column' -
<- .
string. 4
>4 5
(5 6
type6 :
:: ;
$str< K
,K L
nullableM U
:U V
trueW [
)[ \
,\ ]
	last_name   
=   
table    %
.  % &
Column  & ,
<  , -
string  - 3
>  3 4
(  4 5
type  5 9
:  9 :
$str  ; J
,  J K
nullable  L T
:  T U
true  V Z
)  Z [
,  [ \
birthday!! 
=!! 
table!! $
.!!$ %
Column!!% +
<!!+ ,
DateTime!!, 4
>!!4 5
(!!5 6
type!!6 :
:!!: ;
$str!!< G
,!!G H
nullable!!I Q
:!!Q R
true!!S W
)!!W X
}"" 
,"" 
constraints## 
:## 
table## "
=>### %
{$$ 
table%% 
.%% 

PrimaryKey%% $
(%%$ %
$str%%% 2
,%%2 3
x%%4 5
=>%%6 8
x%%9 :
.%%: ;
	client_id%%; D
)%%D E
;%%E F
}&& 
)&& 
;&& 
migrationBuilder(( 
.(( 
CreateTable(( (
(((( )
name)) 
:)) 
$str)) !
,))! "
columns** 
:** 
table** 
=>** !
new**" %
{++ 
employee_id,, 
=,,  !
table,," '
.,,' (
Column,,( .
<,,. /
int,,/ 2
>,,2 3
(,,3 4
type,,4 8
:,,8 9
$str,,: ?
,,,? @
nullable,,A I
:,,I J
false,,K P
),,P Q
.-- 

Annotation-- #
(--# $
$str--$ 8
,--8 9
$str--: @
)--@ A
,--A B

first_name.. 
=..  
table..! &
...& '
Column..' -
<..- .
string... 4
>..4 5
(..5 6
type..6 :
:..: ;
$str..< K
,..K L
nullable..M U
:..U V
false..W \
)..\ ]
,..] ^
	last_name// 
=// 
table//  %
.//% &
Column//& ,
<//, -
string//- 3
>//3 4
(//4 5
type//5 9
://9 :
$str//; J
,//J K
nullable//L T
://T U
false//V [
)//[ \
,//\ ]
salary00 
=00 
table00 "
.00" #
Column00# )
<00) *
float00* /
>00/ 0
(000 1
type001 5
:005 6
$str007 =
,00= >
nullable00? G
:00G H
true00I M
)00M N
,00N O
City11 
=11 
table11  
.11  !
Column11! '
<11' (
string11( .
>11. /
(11/ 0
type110 4
:114 5
$str116 E
,11E F
nullable11G O
:11O P
true11Q U
)11U V
}22 
,22 
constraints33 
:33 
table33 "
=>33# %
{44 
table55 
.55 

PrimaryKey55 $
(55$ %
$str55% 2
,552 3
x554 5
=>556 8
x559 :
.55: ;
employee_id55; F
)55F G
;55G H
}66 
)66 
;66 
migrationBuilder88 
.88 
CreateTable88 (
(88( )
name99 
:99 
$str99 
,99 
columns:: 
::: 
table:: 
=>:: !
new::" %
{;; 
movie_id<< 
=<< 
table<< $
.<<$ %
Column<<% +
<<<+ ,
int<<, /
><</ 0
(<<0 1
type<<1 5
:<<5 6
$str<<7 <
,<<< =
nullable<<> F
:<<F G
false<<H M
)<<M N
.== 

Annotation== #
(==# $
$str==$ 8
,==8 9
$str==: @
)==@ A
,==A B
title>> 
=>> 
table>> !
.>>! "
Column>>" (
<>>( )
string>>) /
>>>/ 0
(>>0 1
type>>1 5
:>>5 6
$str>>7 F
,>>F G
nullable>>H P
:>>P Q
true>>R V
)>>V W
,>>W X
year?? 
=?? 
table??  
.??  !
Column??! '
<??' (
int??( +
>??+ ,
(??, -
type??- 1
:??1 2
$str??3 8
,??8 9
nullable??: B
:??B C
false??D I
)??I J
,??J K
age_restriction@@ #
=@@$ %
table@@& +
.@@+ ,
Column@@, 2
<@@2 3
int@@3 6
>@@6 7
(@@7 8
type@@8 <
:@@< =
$str@@> C
,@@C D
nullable@@E M
:@@M N
false@@O T
)@@T U
,@@U V
priceAA 
=AA 
tableAA !
.AA! "
ColumnAA" (
<AA( )
floatAA) .
>AA. /
(AA/ 0
typeAA0 4
:AA4 5
$strAA6 <
,AA< =
nullableAA> F
:AAF G
falseAAH M
)AAM N
}BB 
,BB 
constraintsCC 
:CC 
tableCC "
=>CC# %
{DD 
tableEE 
.EE 

PrimaryKeyEE $
(EE$ %
$strEE% 2
,EE2 3
xEE4 5
=>EE6 8
xEE9 :
.EE: ;
movie_idEE; C
)EEC D
;EED E
}FF 
)FF 
;FF 
migrationBuilderHH 
.HH 
CreateTableHH (
(HH( )
nameII 
:II 
$strII 
,II 
columnsJJ 
:JJ 
tableJJ 
=>JJ !
newJJ" %
{KK 
copy_idLL 
=LL 
tableLL #
.LL# $
ColumnLL$ *
<LL* +
intLL+ .
>LL. /
(LL/ 0
typeLL0 4
:LL4 5
$strLL6 ;
,LL; <
nullableLL= E
:LLE F
falseLLG L
)LLL M
.MM 

AnnotationMM #
(MM# $
$strMM$ 8
,MM8 9
$strMM: @
)MM@ A
,MMA B
	availableNN 
=NN 
tableNN  %
.NN% &
ColumnNN& ,
<NN, -
boolNN- 1
>NN1 2
(NN2 3
typeNN3 7
:NN7 8
$strNN9 >
,NN> ?
nullableNN@ H
:NNH I
falseNNJ O
)NNO P
,NNP Q
movie_idOO 
=OO 
tableOO $
.OO$ %
ColumnOO% +
<OO+ ,
intOO, /
>OO/ 0
(OO0 1
typeOO1 5
:OO5 6
$strOO7 <
,OO< =
nullableOO> F
:OOF G
falseOOH M
)OOM N
}PP 
,PP 
constraintsQQ 
:QQ 
tableQQ "
=>QQ# %
{RR 
tableSS 
.SS 

PrimaryKeySS $
(SS$ %
$strSS% 2
,SS2 3
xSS4 5
=>SS6 8
xSS9 :
.SS: ;
copy_idSS; B
)SSB C
;SSC D
tableTT 
.TT 

ForeignKeyTT $
(TT$ %
nameUU 
:UU 
$strUU 9
,UU9 :
columnVV 
:VV 
xVV  !
=>VV" $
xVV% &
.VV& '
movie_idVV' /
,VV/ 0
principalTableWW &
:WW& '
$strWW( 0
,WW0 1
principalColumnXX '
:XX' (
$strXX) 3
,XX3 4
onDeleteYY  
:YY  !
ReferentialActionYY" 3
.YY3 4
CascadeYY4 ;
)YY; <
;YY< =
}ZZ 
)ZZ 
;ZZ 
migrationBuilder\\ 
.\\ 
CreateTable\\ (
(\\( )
name]] 
:]] 
$str]]  
,]]  !
columns^^ 
:^^ 
table^^ 
=>^^ !
new^^" %
{__ 
actor_id`` 
=`` 
table`` $
.``$ %
Column``% +
<``+ ,
int``, /
>``/ 0
(``0 1
type``1 5
:``5 6
$str``7 <
,``< =
nullable``> F
:``F G
false``H M
)``M N
,``N O
movie_idaa 
=aa 
tableaa $
.aa$ %
Columnaa% +
<aa+ ,
intaa, /
>aa/ 0
(aa0 1
typeaa1 5
:aa5 6
$straa7 <
,aa< =
nullableaa> F
:aaF G
falseaaH M
)aaM N
}bb 
,bb 
constraintscc 
:cc 
tablecc "
=>cc# %
{dd 
tableee 
.ee 

PrimaryKeyee $
(ee$ %
$stree% 2
,ee2 3
xee4 5
=>ee6 8
newee9 <
{ee= >
xee? @
.ee@ A
actor_ideeA I
,eeI J
xeeK L
.eeL M
movie_ideeM U
}eeV W
)eeW X
;eeX Y
tableff 
.ff 

ForeignKeyff $
(ff$ %
namegg 
:gg 
$strgg ;
,gg; <
columnhh 
:hh 
xhh  !
=>hh" $
xhh% &
.hh& '
actor_idhh' /
,hh/ 0
principalTableii &
:ii& '
$strii( 0
,ii0 1
principalColumnjj '
:jj' (
$strjj) 3
,jj3 4
onDeletekk  
:kk  !
ReferentialActionkk" 3
.kk3 4
Cascadekk4 ;
)kk; <
;kk< =
tablell 
.ll 

ForeignKeyll $
(ll$ %
namemm 
:mm 
$strmm ;
,mm; <
columnnn 
:nn 
xnn  !
=>nn" $
xnn% &
.nn& '
movie_idnn' /
,nn/ 0
principalTableoo &
:oo& '
$stroo( 0
,oo0 1
principalColumnpp '
:pp' (
$strpp) 3
,pp3 4
onDeleteqq  
:qq  !
ReferentialActionqq" 3
.qq3 4
Cascadeqq4 ;
)qq; <
;qq< =
}rr 
)rr 
;rr 
migrationBuildertt 
.tt 
CreateTablett (
(tt( )
nameuu 
:uu 
$struu 
,uu  
columnsvv 
:vv 
tablevv 
=>vv !
newvv" %
{ww 
copy_idxx 
=xx 
tablexx #
.xx# $
Columnxx$ *
<xx* +
intxx+ .
>xx. /
(xx/ 0
typexx0 4
:xx4 5
$strxx6 ;
,xx; <
nullablexx= E
:xxE F
falsexxG L
)xxL M
,xxM N
	client_idyy 
=yy 
tableyy  %
.yy% &
Columnyy& ,
<yy, -
intyy- 0
>yy0 1
(yy1 2
typeyy2 6
:yy6 7
$stryy8 =
,yy= >
nullableyy? G
:yyG H
falseyyI N
)yyN O
,yyO P
date_of_rentalzz "
=zz# $
tablezz% *
.zz* +
Columnzz+ 1
<zz1 2
DateTimezz2 :
>zz: ;
(zz; <
typezz< @
:zz@ A
$strzzB M
,zzM N
nullablezzO W
:zzW X
truezzY ]
)zz] ^
,zz^ _
date_of_return{{ "
={{# $
table{{% *
.{{* +
Column{{+ 1
<{{1 2
DateTime{{2 :
>{{: ;
({{; <
type{{< @
:{{@ A
$str{{B M
,{{M N
nullable{{O W
:{{W X
true{{Y ]
){{] ^
}|| 
,|| 
constraints}} 
:}} 
table}} "
=>}}# %
{~~ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
new: =
{> ?
x@ A
.A B
	client_idB K
,K L
xM N
.N O
copy_idO V
}W X
)X Y
;Y Z
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 <
,
< =
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	client_id
' 0
,
0 1
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) 4
,
4 5
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 9
,
9 :
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
copy_id
' .
,
. /
principalTable
 &
:
& '
$str
( 0
,
0 1
principalColumn
 '
:
' (
$str
) 2
,
2 3
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
 
,
  
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! +
,
+ ,
$str
- 7
,
7 8
$str
9 E
,
E F
$str
G R
}
S T
,
T U
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
new
 
DateTime
 %
(
% &
$num
& *
,
* +
$num
, -
,
- .
$num
/ 1
,
1 2
$num
3 4
,
4 5
$num
6 7
,
7 8
$num
9 :
,
: ;
$num
< =
,
= >
DateTimeKind
? K
.
K L
Unspecified
L W
)
W X
,
X Y
$str
Z b
,
b c
$str
d t
}
u v
,
v w
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 1
,
1 2
$num
3 4
,
4 5
$num
6 7
,
7 8
$num
9 :
,
: ;
$num
< =
,
= >
DateTimeKind
? K
.
K L
Unspecified
L W
)
W X
,
X Y
$str
Z _
,
_ `
$str
a i
}
j k
,
k l
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 1
,
1 2
$num
3 4
,
4 5
$num
6 7
,
7 8
$num
9 :
,
: ;
$num
< =
,
= >
DateTimeKind
? K
.
K L
Unspecified
L W
)
W X
,
X Y
$str
Z c
,
c d
$str
e n
}
o p
,
p q
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ a
,
a b
$str
c k
}
l m
,
m n
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ b
,
b c
$str
d m
}
n o
,
o p
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ a
,
a b
$str
c i
}
j k
,
k l
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ g
,
g h
$str
i r
}
s t
,
t u
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ e
,
e f
$str
g m
}
n o
,
o p
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 1
,
1 2
$num
3 4
,
4 5
$num
6 7
,
7 8
$num
9 :
,
: ;
$num
< =
,
= >
DateTimeKind
? K
.
K L
Unspecified
L W
)
W X
,
X Y
$str
Z c
,
c d
$str
e l
}
m n
,
n o
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ c
,
c d
$str
e l
}
m n
,
n o
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ `
,
` a
$str
b l
}
m n
,
n o
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ c
,
c d
$str
e o
}
p q
,
q r
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ c
,
c d
$str
e m
}
n o
,
o p
{
   
$num
   
,
   
new
   
DateTime
   &
(
  & '
$num
  ' +
,
  + ,
$num
  - /
,
  / 0
$num
  1 3
,
  3 4
$num
  5 6
,
  6 7
$num
  8 9
,
  9 :
$num
  ; <
,
  < =
$num
  > ?
,
  ? @
DateTimeKind
  A M
.
  M N
Unspecified
  N Y
)
  Y Z
,
  Z [
$str
  \ c
,
  c d
$str
  e m
}
  n o
,
  o p
{
¡¡ 
$num
¡¡ 
,
¡¡ 
new
¡¡ 
DateTime
¡¡ &
(
¡¡& '
$num
¡¡' +
,
¡¡+ ,
$num
¡¡- .
,
¡¡. /
$num
¡¡0 2
,
¡¡2 3
$num
¡¡4 5
,
¡¡5 6
$num
¡¡7 8
,
¡¡8 9
$num
¡¡: ;
,
¡¡; <
$num
¡¡= >
,
¡¡> ?
DateTimeKind
¡¡@ L
.
¡¡L M
Unspecified
¡¡M X
)
¡¡X Y
,
¡¡Y Z
$str
¡¡[ a
,
¡¡a b
$str
¡¡c k
}
¡¡l m
,
¡¡m n
{
¢¢ 
$num
¢¢ 
,
¢¢ 
new
¢¢ 
DateTime
¢¢ &
(
¢¢& '
$num
¢¢' +
,
¢¢+ ,
$num
¢¢- /
,
¢¢/ 0
$num
¢¢1 2
,
¢¢2 3
$num
¢¢4 5
,
¢¢5 6
$num
¢¢7 8
,
¢¢8 9
$num
¢¢: ;
,
¢¢; <
$num
¢¢= >
,
¢¢> ?
DateTimeKind
¢¢@ L
.
¢¢L M
Unspecified
¢¢M X
)
¢¢X Y
,
¢¢Y Z
$str
¢¢[ f
,
¢¢f g
$str
¢¢h p
}
¢¢q r
,
¢¢r s
{
££ 
$num
££ 
,
££ 
new
££ 
DateTime
££ &
(
££& '
$num
££' +
,
££+ ,
$num
££- .
,
££. /
$num
££0 1
,
££1 2
$num
££3 4
,
££4 5
$num
££6 7
,
££7 8
$num
££9 :
,
££: ;
$num
££< =
,
££= >
DateTimeKind
££? K
.
££K L
Unspecified
££L W
)
££W X
,
££X Y
$str
££Z _
,
££_ `
$str
££a j
}
££k l
,
££l m
{
¤¤ 
$num
¤¤ 
,
¤¤ 
new
¤¤ 
DateTime
¤¤ &
(
¤¤& '
$num
¤¤' +
,
¤¤+ ,
$num
¤¤- .
,
¤¤. /
$num
¤¤0 2
,
¤¤2 3
$num
¤¤4 5
,
¤¤5 6
$num
¤¤7 8
,
¤¤8 9
$num
¤¤: ;
,
¤¤; <
$num
¤¤= >
,
¤¤> ?
DateTimeKind
¤¤@ L
.
¤¤L M
Unspecified
¤¤M X
)
¤¤X Y
,
¤¤Y Z
$str
¤¤[ a
,
¤¤a b
$str
¤¤c k
}
¤¤l m
,
¤¤m n
{
¥¥ 
$num
¥¥ 
,
¥¥ 
new
¥¥ 
DateTime
¥¥ &
(
¥¥& '
$num
¥¥' +
,
¥¥+ ,
$num
¥¥- .
,
¥¥. /
$num
¥¥0 2
,
¥¥2 3
$num
¥¥4 5
,
¥¥5 6
$num
¥¥7 8
,
¥¥8 9
$num
¥¥: ;
,
¥¥; <
$num
¥¥= >
,
¥¥> ?
DateTimeKind
¥¥@ L
.
¥¥L M
Unspecified
¥¥M X
)
¥¥X Y
,
¥¥Y Z
$str
¥¥[ b
,
¥¥b c
$str
¥¥d n
}
¥¥o p
,
¥¥p q
{
¦¦ 
$num
¦¦ 
,
¦¦ 
new
¦¦ 
DateTime
¦¦ %
(
¦¦% &
$num
¦¦& *
,
¦¦* +
$num
¦¦, -
,
¦¦- .
$num
¦¦/ 1
,
¦¦1 2
$num
¦¦3 4
,
¦¦4 5
$num
¦¦6 7
,
¦¦7 8
$num
¦¦9 :
,
¦¦: ;
$num
¦¦< =
,
¦¦= >
DateTimeKind
¦¦? K
.
¦¦K L
Unspecified
¦¦L W
)
¦¦W X
,
¦¦X Y
$str
¦¦Z c
,
¦¦c d
$str
¦¦e l
}
¦¦m n
,
¦¦n o
{
§§ 
$num
§§ 
,
§§ 
new
§§ 
DateTime
§§ %
(
§§% &
$num
§§& *
,
§§* +
$num
§§, -
,
§§- .
$num
§§/ 0
,
§§0 1
$num
§§2 3
,
§§3 4
$num
§§5 6
,
§§6 7
$num
§§8 9
,
§§9 :
$num
§§; <
,
§§< =
DateTimeKind
§§> J
.
§§J K
Unspecified
§§K V
)
§§V W
,
§§W X
$str
§§Y `
,
§§` a
$str
§§b j
}
§§k l
,
§§l m
{
¨¨ 
$num
¨¨ 
,
¨¨ 
new
¨¨ 
DateTime
¨¨ %
(
¨¨% &
$num
¨¨& *
,
¨¨* +
$num
¨¨, -
,
¨¨- .
$num
¨¨/ 1
,
¨¨1 2
$num
¨¨3 4
,
¨¨4 5
$num
¨¨6 7
,
¨¨7 8
$num
¨¨9 :
,
¨¨: ;
$num
¨¨< =
,
¨¨= >
DateTimeKind
¨¨? K
.
¨¨K L
Unspecified
¨¨L W
)
¨¨W X
,
¨¨X Y
$str
¨¨Z a
,
¨¨a b
$str
¨¨c k
}
¨¨l m
,
¨¨m n
{
©© 
$num
©© 
,
©© 
new
©© 
DateTime
©© %
(
©©% &
$num
©©& *
,
©©* +
$num
©©, -
,
©©- .
$num
©©/ 1
,
©©1 2
$num
©©3 4
,
©©4 5
$num
©©6 7
,
©©7 8
$num
©©9 :
,
©©: ;
$num
©©< =
,
©©= >
DateTimeKind
©©? K
.
©©K L
Unspecified
©©L W
)
©©W X
,
©©X Y
$str
©©Z a
,
©©a b
$str
©©c l
}
©©m n
,
©©n o
{
ªª 
$num
ªª 
,
ªª 
new
ªª 
DateTime
ªª %
(
ªª% &
$num
ªª& *
,
ªª* +
$num
ªª, -
,
ªª- .
$num
ªª/ 0
,
ªª0 1
$num
ªª2 3
,
ªª3 4
$num
ªª5 6
,
ªª6 7
$num
ªª8 9
,
ªª9 :
$num
ªª; <
,
ªª< =
DateTimeKind
ªª> J
.
ªªJ K
Unspecified
ªªK V
)
ªªV W
,
ªªW X
$str
ªªY _
,
ªª_ `
$str
ªªa j
}
ªªk l
,
ªªl m
{
«« 
$num
«« 
,
«« 
new
«« 
DateTime
«« %
(
««% &
$num
««& *
,
««* +
$num
««, .
,
««. /
$num
««0 2
,
««2 3
$num
««4 5
,
««5 6
$num
««7 8
,
««8 9
$num
««: ;
,
««; <
$num
««= >
,
««> ?
DateTimeKind
««@ L
.
««L M
Unspecified
««M X
)
««X Y
,
««Y Z
$str
««[ c
,
««c d
$str
««e m
}
««n o
,
««o p
{
¬¬ 
$num
¬¬ 
,
¬¬ 
new
¬¬ 
DateTime
¬¬ %
(
¬¬% &
$num
¬¬& *
,
¬¬* +
$num
¬¬, -
,
¬¬- .
$num
¬¬/ 1
,
¬¬1 2
$num
¬¬3 4
,
¬¬4 5
$num
¬¬6 7
,
¬¬7 8
$num
¬¬9 :
,
¬¬: ;
$num
¬¬< =
,
¬¬= >
DateTimeKind
¬¬? K
.
¬¬K L
Unspecified
¬¬L W
)
¬¬W X
,
¬¬X Y
$str
¬¬Z d
,
¬¬d e
$str
¬¬f l
}
¬¬m n
,
¬¬n o
{
­­ 
$num
­­ 
,
­­ 
new
­­ 
DateTime
­­ %
(
­­% &
$num
­­& *
,
­­* +
$num
­­, -
,
­­- .
$num
­­/ 1
,
­­1 2
$num
­­3 4
,
­­4 5
$num
­­6 7
,
­­7 8
$num
­­9 :
,
­­: ;
$num
­­< =
,
­­= >
DateTimeKind
­­? K
.
­­K L
Unspecified
­­L W
)
­­W X
,
­­X Y
$str
­­Z c
,
­­c d
$str
­­e n
}
­­o p
,
­­p q
{
®® 
$num
®® 
,
®® 
new
®® 
DateTime
®® &
(
®®& '
$num
®®' +
,
®®+ ,
$num
®®- .
,
®®. /
$num
®®0 2
,
®®2 3
$num
®®4 5
,
®®5 6
$num
®®7 8
,
®®8 9
$num
®®: ;
,
®®; <
$num
®®= >
,
®®> ?
DateTimeKind
®®@ L
.
®®L M
Unspecified
®®M X
)
®®X Y
,
®®Y Z
$str
®®[ c
,
®®c d
$str
®®e n
}
®®o p
}
¯¯ 
)
¯¯ 
;
¯¯ 
migrationBuilder
±± 
.
±± 

InsertData
±± '
(
±±' (
table
²² 
:
²² 
$str
²²  
,
²²  !
columns
³³ 
:
³³ 
new
³³ 
[
³³ 
]
³³ 
{
³³  
$str
³³! ,
,
³³, -
$str
³³. 8
,
³³8 9
$str
³³: F
,
³³F G
$str
³³H S
}
³³T U
,
³³U V
values
´´ 
:
´´ 
new
´´ 
object
´´ "
[
´´" #
,
´´# $
]
´´$ %
{
µµ 
{
¶¶ 
$num
¶¶ 
,
¶¶ 
new
¶¶ 
DateTime
¶¶ %
(
¶¶% &
$num
¶¶& *
,
¶¶* +
$num
¶¶, -
,
¶¶- .
$num
¶¶/ 1
,
¶¶1 2
$num
¶¶3 4
,
¶¶4 5
$num
¶¶6 7
,
¶¶7 8
$num
¶¶9 :
,
¶¶: ;
$num
¶¶< =
,
¶¶= >
DateTimeKind
¶¶? K
.
¶¶K L
Unspecified
¶¶L W
)
¶¶W X
,
¶¶X Y
$str
¶¶Z `
,
¶¶` a
$str
¶¶b k
}
¶¶l m
,
¶¶m n
{
·· 
$num
·· 
,
·· 
new
·· 
DateTime
·· %
(
··% &
$num
··& *
,
··* +
$num
··, -
,
··- .
$num
··/ 0
,
··0 1
$num
··2 3
,
··3 4
$num
··5 6
,
··6 7
$num
··8 9
,
··9 :
$num
··; <
,
··< =
DateTimeKind
··> J
.
··J K
Unspecified
··K V
)
··V W
,
··W X
$str
··Y _
,
··_ `
$str
··a j
}
··k l
,
··l m
{
¸¸ 
$num
¸¸ 
,
¸¸ 
new
¸¸ 
DateTime
¸¸ %
(
¸¸% &
$num
¸¸& *
,
¸¸* +
$num
¸¸, -
,
¸¸- .
$num
¸¸/ 1
,
¸¸1 2
$num
¸¸3 4
,
¸¸4 5
$num
¸¸6 7
,
¸¸7 8
$num
¸¸9 :
,
¸¸: ;
$num
¸¸< =
,
¸¸= >
DateTimeKind
¸¸? K
.
¸¸K L
Unspecified
¸¸L W
)
¸¸W X
,
¸¸X Y
$str
¸¸Z _
,
¸¸_ `
$str
¸¸a j
}
¸¸k l
,
¸¸l m
{
¹¹ 
$num
¹¹ 
,
¹¹ 
new
¹¹ 
DateTime
¹¹ %
(
¹¹% &
$num
¹¹& *
,
¹¹* +
$num
¹¹, -
,
¹¹- .
$num
¹¹/ 1
,
¹¹1 2
$num
¹¹3 4
,
¹¹4 5
$num
¹¹6 7
,
¹¹7 8
$num
¹¹9 :
,
¹¹: ;
$num
¹¹< =
,
¹¹= >
DateTimeKind
¹¹? K
.
¹¹K L
Unspecified
¹¹L W
)
¹¹W X
,
¹¹X Y
$str
¹¹Z a
,
¹¹a b
$str
¹¹c l
}
¹¹m n
,
¹¹n o
{
ºº 
$num
ºº 
,
ºº 
new
ºº 
DateTime
ºº %
(
ºº% &
$num
ºº& *
,
ºº* +
$num
ºº, -
,
ºº- .
$num
ºº/ 1
,
ºº1 2
$num
ºº3 4
,
ºº4 5
$num
ºº6 7
,
ºº7 8
$num
ºº9 :
,
ºº: ;
$num
ºº< =
,
ºº= >
DateTimeKind
ºº? K
.
ººK L
Unspecified
ººL W
)
ººW X
,
ººX Y
$str
ººZ `
,
ºº` a
$str
ººb h
}
ººi j
,
ººj k
{
»» 
$num
»» 
,
»» 
new
»» 
DateTime
»» %
(
»»% &
$num
»»& *
,
»»* +
$num
»», -
,
»»- .
$num
»»/ 1
,
»»1 2
$num
»»3 4
,
»»4 5
$num
»»6 7
,
»»7 8
$num
»»9 :
,
»»: ;
$num
»»< =
,
»»= >
DateTimeKind
»»? K
.
»»K L
Unspecified
»»L W
)
»»W X
,
»»X Y
$str
»»Z `
,
»»` a
$str
»»b m
}
»»n o
}
¼¼ 
)
¼¼ 
;
¼¼ 
migrationBuilder
¾¾ 
.
¾¾ 

InsertData
¾¾ '
(
¾¾' (
table
¿¿ 
:
¿¿ 
$str
¿¿ "
,
¿¿" #
columns
ÀÀ 
:
ÀÀ 
new
ÀÀ 
[
ÀÀ 
]
ÀÀ 
{
ÀÀ  
$str
ÀÀ! .
,
ÀÀ. /
$str
ÀÀ0 6
,
ÀÀ6 7
$str
ÀÀ8 D
,
ÀÀD E
$str
ÀÀF Q
,
ÀÀQ R
$str
ÀÀS [
}
ÀÀ\ ]
,
ÀÀ] ^
values
ÁÁ 
:
ÁÁ 
new
ÁÁ 
object
ÁÁ "
[
ÁÁ" #
,
ÁÁ# $
]
ÁÁ$ %
{
ÂÂ 
{
ÃÃ 
$num
ÃÃ 
,
ÃÃ 
$str
ÃÃ #
,
ÃÃ# $
$str
ÃÃ% +
,
ÃÃ+ ,
$str
ÃÃ- 4
,
ÃÃ4 5
$num
ÃÃ6 :
}
ÃÃ; <
,
ÃÃ< =
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
$str
ÄÄ #
,
ÄÄ# $
$str
ÄÄ% *
,
ÄÄ* +
$str
ÄÄ, 5
,
ÄÄ5 6
$num
ÄÄ7 ;
}
ÄÄ< =
,
ÄÄ= >
{
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
$str
ÅÅ &
,
ÅÅ& '
$str
ÅÅ( /
,
ÅÅ/ 0
$str
ÅÅ1 <
,
ÅÅ< =
$num
ÅÅ> A
}
ÅÅB C
,
ÅÅC D
{
ÆÆ 
$num
ÆÆ 
,
ÆÆ 
$str
ÆÆ !
,
ÆÆ! "
$str
ÆÆ# )
,
ÆÆ) *
$str
ÆÆ+ 3
,
ÆÆ3 4
$num
ÆÆ5 9
}
ÆÆ: ;
,
ÆÆ; <
{
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
$str
ÇÇ !
,
ÇÇ! "
$str
ÇÇ# *
,
ÇÇ* +
$str
ÇÇ, 5
,
ÇÇ5 6
$num
ÇÇ7 ;
}
ÇÇ< =
}
ÈÈ 
)
ÈÈ 
;
ÈÈ 
migrationBuilder
ÊÊ 
.
ÊÊ 

InsertData
ÊÊ '
(
ÊÊ' (
table
ËË 
:
ËË 
$str
ËË 
,
ËË  
columns
ÌÌ 
:
ÌÌ 
new
ÌÌ 
[
ÌÌ 
]
ÌÌ 
{
ÌÌ  
$str
ÌÌ! +
,
ÌÌ+ ,
$str
ÌÌ- >
,
ÌÌ> ?
$str
ÌÌ@ G
,
ÌÌG H
$str
ÌÌI P
,
ÌÌP Q
$str
ÌÌR X
}
ÌÌY Z
,
ÌÌZ [
values
ÍÍ 
:
ÍÍ 
new
ÍÍ 
object
ÍÍ "
[
ÍÍ" #
,
ÍÍ# $
]
ÍÍ$ %
{
ÎÎ 
{
ÏÏ 
$num
ÏÏ 
,
ÏÏ 
$num
ÏÏ 
,
ÏÏ 
$num
ÏÏ "
,
ÏÏ" #
$str
ÏÏ$ 2
,
ÏÏ2 3
$num
ÏÏ4 8
}
ÏÏ9 :
,
ÏÏ: ;
{
ÐÐ 
$num
ÐÐ 
,
ÐÐ 
$num
ÐÐ 
,
ÐÐ 
$num
ÐÐ !
,
ÐÐ! "
$str
ÐÐ# *
,
ÐÐ* +
$num
ÐÐ, 0
}
ÐÐ1 2
,
ÐÐ2 3
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$num
ÑÑ !
,
ÑÑ! "
$str
ÑÑ# ,
,
ÑÑ, -
$num
ÑÑ. 2
}
ÑÑ3 4
}
ÒÒ 
)
ÒÒ 
;
ÒÒ 
migrationBuilder
ÔÔ 
.
ÔÔ 

InsertData
ÔÔ '
(
ÔÔ' (
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ 
,
ÕÕ  
columns
ÖÖ 
:
ÖÖ 
new
ÖÖ 
[
ÖÖ 
]
ÖÖ 
{
ÖÖ  
$str
ÖÖ! +
,
ÖÖ+ ,
$str
ÖÖ- >
,
ÖÖ> ?
$str
ÖÖ@ G
,
ÖÖG H
$str
ÖÖI P
,
ÖÖP Q
$str
ÖÖR X
}
ÖÖY Z
,
ÖÖZ [
values
×× 
:
×× 
new
×× 
object
×× "
[
××" #
,
××# $
]
××$ %
{
ØØ 
{
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
$num
ÙÙ 
,
ÙÙ  
$str
ÙÙ! *
,
ÙÙ* +
$num
ÙÙ, 0
}
ÙÙ1 2
,
ÙÙ2 3
{
ÚÚ 
$num
ÚÚ 
,
ÚÚ 
$num
ÚÚ 
,
ÚÚ 
$num
ÚÚ  
,
ÚÚ  !
$str
ÚÚ" D
,
ÚÚD E
$num
ÚÚF J
}
ÚÚK L
,
ÚÚL M
{
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
$num
ÛÛ !
,
ÛÛ! "
$str
ÛÛ# /
,
ÛÛ/ 0
$num
ÛÛ1 5
}
ÛÛ6 7
,
ÛÛ7 8
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
$num
ÜÜ !
,
ÜÜ! "
$str
ÜÜ# 1
,
ÜÜ1 2
$num
ÜÜ3 7
}
ÜÜ8 9
,
ÜÜ9 :
{
ÝÝ 
$num
ÝÝ 
,
ÝÝ 
$num
ÝÝ 
,
ÝÝ 
$num
ÝÝ !
,
ÝÝ! "
$str
ÝÝ# ;
,
ÝÝ; <
$num
ÝÝ= A
}
ÝÝB C
,
ÝÝC D
{
ÞÞ 
$num
ÞÞ 
,
ÞÞ 
$num
ÞÞ 
,
ÞÞ 
$num
ÞÞ 
,
ÞÞ  
$str
ÞÞ! .
,
ÞÞ. /
$num
ÞÞ0 4
}
ÞÞ5 6
,
ÞÞ6 7
{
ßß 
$num
ßß 
,
ßß 
$num
ßß 
,
ßß 
$num
ßß "
,
ßß" #
$str
ßß$ 8
,
ßß8 9
$num
ßß: >
}
ßß? @
}
àà 
)
àà 
;
àà 
migrationBuilder
ââ 
.
ââ 

InsertData
ââ '
(
ââ' (
table
ãã 
:
ãã 
$str
ãã 
,
ãã  
columns
ää 
:
ää 
new
ää 
[
ää 
]
ää 
{
ää  
$str
ää! *
,
ää* +
$str
ää, 7
,
ää7 8
$str
ää9 C
}
ääD E
,
ääE F
values
åå 
:
åå 
new
åå 
object
åå "
[
åå" #
,
åå# $
]
åå$ %
{
ææ 
{
çç 
$num
çç 
,
çç 
true
çç 
,
çç 
$num
çç  
}
çç! "
,
çç" #
{
èè 
$num
èè 
,
èè 
true
èè 
,
èè 
$num
èè  !
}
èè" #
,
èè# $
{
éé 
$num
éé 
,
éé 
false
éé 
,
éé 
$num
éé  !
}
éé" #
,
éé# $
{
êê 
$num
êê 
,
êê 
true
êê 
,
êê 
$num
êê  !
}
êê" #
,
êê# $
{
ëë 
$num
ëë 
,
ëë 
true
ëë 
,
ëë 
$num
ëë  !
}
ëë" #
,
ëë# $
{
ìì 
$num
ìì 
,
ìì 
true
ìì 
,
ìì 
$num
ìì  
}
ìì! "
,
ìì" #
{
íí 
$num
íí 
,
íí 
false
íí 
,
íí  
$num
íí! "
}
íí# $
,
íí$ %
{
îî 
$num
îî 
,
îî 
true
îî 
,
îî 
$num
îî  
}
îî! "
,
îî" #
{
ïï 
$num
ïï 
,
ïï 
false
ïï 
,
ïï  
$num
ïï! "
}
ïï# $
,
ïï$ %
{
ðð 
$num
ðð 
,
ðð 
true
ðð 
,
ðð 
$num
ðð  
}
ðð! "
,
ðð" #
{
ññ 
$num
ññ 
,
ññ 
false
ññ 
,
ññ 
$num
ññ  !
}
ññ" #
,
ññ# $
{
òò 
$num
òò 
,
òò 
false
òò 
,
òò  
$num
òò! #
}
òò$ %
,
òò% &
{
óó 
$num
óó 
,
óó 
false
óó 
,
óó 
$num
óó  !
}
óó" #
,
óó# $
{
ôô 
$num
ôô 
,
ôô 
true
ôô 
,
ôô 
$num
ôô  "
}
ôô# $
,
ôô$ %
{
õõ 
$num
õõ 
,
õõ 
true
õõ 
,
õõ 
$num
õõ  "
}
õõ# $
,
õõ$ %
{
öö 
$num
öö 
,
öö 
true
öö 
,
öö 
$num
öö  "
}
öö# $
,
öö$ %
{
÷÷ 
$num
÷÷ 
,
÷÷ 
true
÷÷ 
,
÷÷ 
$num
÷÷  !
}
÷÷" #
,
÷÷# $
{
øø 
$num
øø 
,
øø 
true
øø 
,
øø 
$num
øø  
}
øø! "
,
øø" #
{
ùù 
$num
ùù 
,
ùù 
true
ùù 
,
ùù 
$num
ùù  
}
ùù! "
,
ùù" #
{
úú 
$num
úú 
,
úú 
true
úú 
,
úú 
$num
úú  "
}
úú# $
}
ûû 
)
ûû 
;
ûû 
migrationBuilder
ýý 
.
ýý 

InsertData
ýý '
(
ýý' (
table
þþ 
:
þþ 
$str
þþ !
,
þþ! "
columns
ÿÿ 
:
ÿÿ 
new
ÿÿ 
[
ÿÿ 
]
ÿÿ 
{
ÿÿ  
$str
ÿÿ! +
,
ÿÿ+ ,
$str
ÿÿ- 7
}
ÿÿ8 9
,
ÿÿ9 :
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
 !
,
! "
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! +
,
+ ,
$str
- 7
}
8 9
,
9 :
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
   
$num
   
,
   
$num
   
}
   
,
   
{
¡¡ 
$num
¡¡ 
,
¡¡ 
$num
¡¡ 
}
¡¡ 
,
¡¡ 
{
¢¢ 
$num
¢¢ 
,
¢¢ 
$num
¢¢ 
}
¢¢ 
,
¢¢ 
{
££ 
$num
££ 
,
££ 
$num
££ 
}
££ 
,
££ 
{
¤¤ 
$num
¤¤ 
,
¤¤ 
$num
¤¤ 
}
¤¤ 
,
¤¤ 
{
¥¥ 
$num
¥¥ 
,
¥¥ 
$num
¥¥ 
}
¥¥ 
,
¥¥ 
{
¦¦ 
$num
¦¦ 
,
¦¦ 
$num
¦¦ 
}
¦¦ 
,
¦¦ 
{
§§ 
$num
§§ 
,
§§ 
$num
§§ 
}
§§ 
}
¨¨ 
)
¨¨ 
;
¨¨ 
migrationBuilder
ªª 
.
ªª 

InsertData
ªª '
(
ªª' (
table
«« 
:
«« 
$str
««  
,
««  !
columns
¬¬ 
:
¬¬ 
new
¬¬ 
[
¬¬ 
]
¬¬ 
{
¬¬  
$str
¬¬! ,
,
¬¬, -
$str
¬¬. 7
,
¬¬7 8
$str
¬¬9 I
,
¬¬I J
$str
¬¬K [
}
¬¬\ ]
,
¬¬] ^
values
­­ 
:
­­ 
new
­­ 
object
­­ "
[
­­" #
,
­­# $
]
­­$ %
{
®® 
{
¯¯ 
$num
¯¯ 
,
¯¯ 
$num
¯¯ 
,
¯¯ 
new
¯¯ 
DateTime
¯¯  (
(
¯¯( )
$num
¯¯) -
,
¯¯- .
$num
¯¯/ 0
,
¯¯0 1
$num
¯¯2 3
,
¯¯3 4
$num
¯¯5 6
,
¯¯6 7
$num
¯¯8 9
,
¯¯9 :
$num
¯¯; <
,
¯¯< =
$num
¯¯> ?
,
¯¯? @
DateTimeKind
¯¯A M
.
¯¯M N
Unspecified
¯¯N Y
)
¯¯Y Z
,
¯¯Z [
new
¯¯\ _
DateTime
¯¯` h
(
¯¯h i
$num
¯¯i m
,
¯¯m n
$num
¯¯o p
,
¯¯p q
$num
¯¯r s
,
¯¯s t
$num
¯¯u v
,
¯¯v w
$num
¯¯x y
,
¯¯y z
$num
¯¯{ |
,
¯¯| }
$num
¯¯~ 
,¯¯ 
DateTimeKind¯¯ 
.¯¯ 
Unspecified¯¯ 
)¯¯ 
}¯¯ 
,¯¯ 
{
°° 
$num
°° 
,
°° 
$num
°° 
,
°° 
new
°° 
DateTime
°°  (
(
°°( )
$num
°°) -
,
°°- .
$num
°°/ 0
,
°°0 1
$num
°°2 3
,
°°3 4
$num
°°5 6
,
°°6 7
$num
°°8 9
,
°°9 :
$num
°°; <
,
°°< =
$num
°°> ?
,
°°? @
DateTimeKind
°°A M
.
°°M N
Unspecified
°°N Y
)
°°Y Z
,
°°Z [
new
°°\ _
DateTime
°°` h
(
°°h i
$num
°°i m
,
°°m n
$num
°°o p
,
°°p q
$num
°°r s
,
°°s t
$num
°°u v
,
°°v w
$num
°°x y
,
°°y z
$num
°°{ |
,
°°| }
$num
°°~ 
,°° 
DateTimeKind°° 
.°° 
Unspecified°° 
)°° 
}°° 
,°° 
{
±± 
$num
±± 
,
±± 
$num
±± 
,
±± 
new
±± 
DateTime
±±  (
(
±±( )
$num
±±) -
,
±±- .
$num
±±/ 0
,
±±0 1
$num
±±2 4
,
±±4 5
$num
±±6 7
,
±±7 8
$num
±±9 :
,
±±: ;
$num
±±< =
,
±±= >
$num
±±? @
,
±±@ A
DateTimeKind
±±B N
.
±±N O
Unspecified
±±O Z
)
±±Z [
,
±±[ \
new
±±] `
DateTime
±±a i
(
±±i j
$num
±±j n
,
±±n o
$num
±±p q
,
±±q r
$num
±±s u
,
±±u v
$num
±±w x
,
±±x y
$num
±±z {
,
±±{ |
$num
±±} ~
,
±±~ 
$num±± 
,±± 
DateTimeKind±± 
.±± 
Unspecified±± 
)±± 
}±± 
,±± 
{
²² 
$num
²² 
,
²² 
$num
²² 
,
²² 
new
²² 
DateTime
²²  (
(
²²( )
$num
²²) -
,
²²- .
$num
²²/ 0
,
²²0 1
$num
²²2 4
,
²²4 5
$num
²²6 7
,
²²7 8
$num
²²9 :
,
²²: ;
$num
²²< =
,
²²= >
$num
²²? @
,
²²@ A
DateTimeKind
²²B N
.
²²N O
Unspecified
²²O Z
)
²²Z [
,
²²[ \
new
²²] `
DateTime
²²a i
(
²²i j
$num
²²j n
,
²²n o
$num
²²p q
,
²²q r
$num
²²s u
,
²²u v
$num
²²w x
,
²²x y
$num
²²z {
,
²²{ |
$num
²²} ~
,
²²~ 
$num²² 
,²² 
DateTimeKind²² 
.²² 
Unspecified²² 
)²² 
}²² 
,²² 
{
³³ 
$num
³³ 
,
³³ 
$num
³³ 
,
³³ 
new
³³ 
DateTime
³³  (
(
³³( )
$num
³³) -
,
³³- .
$num
³³/ 0
,
³³0 1
$num
³³2 4
,
³³4 5
$num
³³6 7
,
³³7 8
$num
³³9 :
,
³³: ;
$num
³³< =
,
³³= >
$num
³³? @
,
³³@ A
DateTimeKind
³³B N
.
³³N O
Unspecified
³³O Z
)
³³Z [
,
³³[ \
new
³³] `
DateTime
³³a i
(
³³i j
$num
³³j n
,
³³n o
$num
³³p q
,
³³q r
$num
³³s u
,
³³u v
$num
³³w x
,
³³x y
$num
³³z {
,
³³{ |
$num
³³} ~
,
³³~ 
$num³³ 
,³³ 
DateTimeKind³³ 
.³³ 
Unspecified³³ 
)³³ 
}³³ 
,³³ 
{
´´ 
$num
´´ 
,
´´ 
$num
´´ 
,
´´ 
new
´´ 
DateTime
´´  (
(
´´( )
$num
´´) -
,
´´- .
$num
´´/ 0
,
´´0 1
$num
´´2 4
,
´´4 5
$num
´´6 7
,
´´7 8
$num
´´9 :
,
´´: ;
$num
´´< =
,
´´= >
$num
´´? @
,
´´@ A
DateTimeKind
´´B N
.
´´N O
Unspecified
´´O Z
)
´´Z [
,
´´[ \
new
´´] `
DateTime
´´a i
(
´´i j
$num
´´j n
,
´´n o
$num
´´p q
,
´´q r
$num
´´s u
,
´´u v
$num
´´w x
,
´´x y
$num
´´z {
,
´´{ |
$num
´´} ~
,
´´~ 
$num´´ 
,´´ 
DateTimeKind´´ 
.´´ 
Unspecified´´ 
)´´ 
}´´ 
,´´ 
{
µµ 
$num
µµ 
,
µµ 
$num
µµ 
,
µµ 
new
µµ 
DateTime
µµ  (
(
µµ( )
$num
µµ) -
,
µµ- .
$num
µµ/ 0
,
µµ0 1
$num
µµ2 4
,
µµ4 5
$num
µµ6 7
,
µµ7 8
$num
µµ9 :
,
µµ: ;
$num
µµ< =
,
µµ= >
$num
µµ? @
,
µµ@ A
DateTimeKind
µµB N
.
µµN O
Unspecified
µµO Z
)
µµZ [
,
µµ[ \
new
µµ] `
DateTime
µµa i
(
µµi j
$num
µµj n
,
µµn o
$num
µµp q
,
µµq r
$num
µµs u
,
µµu v
$num
µµw x
,
µµx y
$num
µµz {
,
µµ{ |
$num
µµ} ~
,
µµ~ 
$numµµ 
,µµ 
DateTimeKindµµ 
.µµ 
Unspecifiedµµ 
)µµ 
}µµ 
,µµ 
{
¶¶ 
$num
¶¶ 
,
¶¶ 
$num
¶¶ 
,
¶¶ 
new
¶¶ 
DateTime
¶¶  (
(
¶¶( )
$num
¶¶) -
,
¶¶- .
$num
¶¶/ 0
,
¶¶0 1
$num
¶¶2 4
,
¶¶4 5
$num
¶¶6 7
,
¶¶7 8
$num
¶¶9 :
,
¶¶: ;
$num
¶¶< =
,
¶¶= >
$num
¶¶? @
,
¶¶@ A
DateTimeKind
¶¶B N
.
¶¶N O
Unspecified
¶¶O Z
)
¶¶Z [
,
¶¶[ \
new
¶¶] `
DateTime
¶¶a i
(
¶¶i j
$num
¶¶j n
,
¶¶n o
$num
¶¶p q
,
¶¶q r
$num
¶¶s u
,
¶¶u v
$num
¶¶w x
,
¶¶x y
$num
¶¶z {
,
¶¶{ |
$num
¶¶} ~
,
¶¶~ 
$num¶¶ 
,¶¶ 
DateTimeKind¶¶ 
.¶¶ 
Unspecified¶¶ 
)¶¶ 
}¶¶ 
,¶¶ 
{
·· 
$num
·· 
,
·· 
$num
·· 
,
·· 
new
·· 
DateTime
··  (
(
··( )
$num
··) -
,
··- .
$num
··/ 0
,
··0 1
$num
··2 4
,
··4 5
$num
··6 7
,
··7 8
$num
··9 :
,
··: ;
$num
··< =
,
··= >
$num
··? @
,
··@ A
DateTimeKind
··B N
.
··N O
Unspecified
··O Z
)
··Z [
,
··[ \
new
··] `
DateTime
··a i
(
··i j
$num
··j n
,
··n o
$num
··p q
,
··q r
$num
··s u
,
··u v
$num
··w x
,
··x y
$num
··z {
,
··{ |
$num
··} ~
,
··~ 
$num·· 
,·· 
DateTimeKind·· 
.·· 
Unspecified·· 
)·· 
}·· 
,·· 
{
¸¸ 
$num
¸¸ 
,
¸¸ 
$num
¸¸ 
,
¸¸ 
new
¸¸  
DateTime
¸¸! )
(
¸¸) *
$num
¸¸* .
,
¸¸. /
$num
¸¸0 1
,
¸¸1 2
$num
¸¸3 5
,
¸¸5 6
$num
¸¸7 8
,
¸¸8 9
$num
¸¸: ;
,
¸¸; <
$num
¸¸= >
,
¸¸> ?
$num
¸¸@ A
,
¸¸A B
DateTimeKind
¸¸C O
.
¸¸O P
Unspecified
¸¸P [
)
¸¸[ \
,
¸¸\ ]
new
¸¸^ a
DateTime
¸¸b j
(
¸¸j k
$num
¸¸k o
,
¸¸o p
$num
¸¸q r
,
¸¸r s
$num
¸¸t v
,
¸¸v w
$num
¸¸x y
,
¸¸y z
$num
¸¸{ |
,
¸¸| }
$num
¸¸~ 
,¸¸ 
$num¸¸ 
,¸¸ 
DateTimeKind¸¸ 
.¸¸ 
Unspecified¸¸ 
)¸¸ 
}¸¸ 
,¸¸  
{
¹¹ 
$num
¹¹ 
,
¹¹ 
$num
¹¹ 
,
¹¹ 
new
¹¹  
DateTime
¹¹! )
(
¹¹) *
$num
¹¹* .
,
¹¹. /
$num
¹¹0 1
,
¹¹1 2
$num
¹¹3 5
,
¹¹5 6
$num
¹¹7 8
,
¹¹8 9
$num
¹¹: ;
,
¹¹; <
$num
¹¹= >
,
¹¹> ?
$num
¹¹@ A
,
¹¹A B
DateTimeKind
¹¹C O
.
¹¹O P
Unspecified
¹¹P [
)
¹¹[ \
,
¹¹\ ]
new
¹¹^ a
DateTime
¹¹b j
(
¹¹j k
$num
¹¹k o
,
¹¹o p
$num
¹¹q r
,
¹¹r s
$num
¹¹t v
,
¹¹v w
$num
¹¹x y
,
¹¹y z
$num
¹¹{ |
,
¹¹| }
$num
¹¹~ 
,¹¹ 
$num¹¹ 
,¹¹ 
DateTimeKind¹¹ 
.¹¹ 
Unspecified¹¹ 
)¹¹ 
}¹¹ 
,¹¹  
{
ºº 
$num
ºº 
,
ºº 
$num
ºº 
,
ºº 
new
ºº  
DateTime
ºº! )
(
ºº) *
$num
ºº* .
,
ºº. /
$num
ºº0 1
,
ºº1 2
$num
ºº3 4
,
ºº4 5
$num
ºº6 7
,
ºº7 8
$num
ºº9 :
,
ºº: ;
$num
ºº< =
,
ºº= >
$num
ºº? @
,
ºº@ A
DateTimeKind
ººB N
.
ººN O
Unspecified
ººO Z
)
ººZ [
,
ºº[ \
new
ºº] `
DateTime
ººa i
(
ººi j
$num
ººj n
,
ººn o
$num
ººp q
,
ººq r
$num
ººs t
,
ººt u
$num
ººv w
,
ººw x
$num
ººy z
,
ººz {
$num
ºº| }
,
ºº} ~
$numºº 
,ºº 
DateTimeKindºº 
.ºº 
Unspecifiedºº 
)ºº 
}ºº 
,ºº 
{
»» 
$num
»» 
,
»» 
$num
»» 
,
»» 
new
»»  
DateTime
»»! )
(
»») *
$num
»»* .
,
»». /
$num
»»0 1
,
»»1 2
$num
»»3 5
,
»»5 6
$num
»»7 8
,
»»8 9
$num
»»: ;
,
»»; <
$num
»»= >
,
»»> ?
$num
»»@ A
,
»»A B
DateTimeKind
»»C O
.
»»O P
Unspecified
»»P [
)
»»[ \
,
»»\ ]
new
»»^ a
DateTime
»»b j
(
»»j k
$num
»»k o
,
»»o p
$num
»»q r
,
»»r s
$num
»»t v
,
»»v w
$num
»»x y
,
»»y z
$num
»»{ |
,
»»| }
$num
»»~ 
,»» 
$num»» 
,»» 
DateTimeKind»» 
.»» 
Unspecified»» 
)»» 
}»» 
,»»  
{
¼¼ 
$num
¼¼ 
,
¼¼ 
$num
¼¼ 
,
¼¼ 
new
¼¼  
DateTime
¼¼! )
(
¼¼) *
$num
¼¼* .
,
¼¼. /
$num
¼¼0 1
,
¼¼1 2
$num
¼¼3 5
,
¼¼5 6
$num
¼¼7 8
,
¼¼8 9
$num
¼¼: ;
,
¼¼; <
$num
¼¼= >
,
¼¼> ?
$num
¼¼@ A
,
¼¼A B
DateTimeKind
¼¼C O
.
¼¼O P
Unspecified
¼¼P [
)
¼¼[ \
,
¼¼\ ]
new
¼¼^ a
DateTime
¼¼b j
(
¼¼j k
$num
¼¼k o
,
¼¼o p
$num
¼¼q r
,
¼¼r s
$num
¼¼t v
,
¼¼v w
$num
¼¼x y
,
¼¼y z
$num
¼¼{ |
,
¼¼| }
$num
¼¼~ 
,¼¼ 
$num¼¼ 
,¼¼ 
DateTimeKind¼¼ 
.¼¼ 
Unspecified¼¼ 
)¼¼ 
}¼¼ 
}
½½ 
)
½½ 
;
½½ 
migrationBuilder
¿¿ 
.
¿¿ 
CreateIndex
¿¿ (
(
¿¿( )
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ *
,
ÀÀ* +
table
ÁÁ 
:
ÁÁ 
$str
ÁÁ 
,
ÁÁ  
column
ÂÂ 
:
ÂÂ 
$str
ÂÂ "
)
ÂÂ" #
;
ÂÂ# $
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateIndex
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ *
,
ÅÅ* +
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ  
,
ÆÆ  !
column
ÇÇ 
:
ÇÇ 
$str
ÇÇ !
)
ÇÇ! "
;
ÇÇ" #
migrationBuilder
ÉÉ 
.
ÉÉ 
CreateIndex
ÉÉ (
(
ÉÉ( )
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ ,
,
ÊÊ, -
table
ËË 
:
ËË 
$str
ËË !
,
ËË! "
column
ÌÌ 
:
ÌÌ 
$str
ÌÌ "
)
ÌÌ" #
;
ÌÌ# $
}
ÍÍ 	
	protected
ÏÏ 
override
ÏÏ 
void
ÏÏ 
Down
ÏÏ  $
(
ÏÏ$ %
MigrationBuilder
ÏÏ% 5
migrationBuilder
ÏÏ6 F
)
ÏÏF G
{
ÐÐ 	
migrationBuilder
ÑÑ 
.
ÑÑ 
	DropTable
ÑÑ &
(
ÑÑ& '
name
ÒÒ 
:
ÒÒ 
$str
ÒÒ !
)
ÒÒ! "
;
ÒÒ" #
migrationBuilder
ÔÔ 
.
ÔÔ 
	DropTable
ÔÔ &
(
ÔÔ& '
name
ÕÕ 
:
ÕÕ 
$str
ÕÕ 
)
ÕÕ  
;
ÕÕ  !
migrationBuilder
×× 
.
×× 
	DropTable
×× &
(
××& '
name
ØØ 
:
ØØ 
$str
ØØ  
)
ØØ  !
;
ØØ! "
migrationBuilder
ÚÚ 
.
ÚÚ 
	DropTable
ÚÚ &
(
ÚÚ& '
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ 
)
ÛÛ  
;
ÛÛ  !
migrationBuilder
ÝÝ 
.
ÝÝ 
	DropTable
ÝÝ &
(
ÝÝ& '
name
ÞÞ 
:
ÞÞ 
$str
ÞÞ 
)
ÞÞ 
;
ÞÞ  
migrationBuilder
àà 
.
àà 
	DropTable
àà &
(
àà& '
name
áá 
:
áá 
$str
áá 
)
áá 
;
áá  
migrationBuilder
ãã 
.
ãã 
	DropTable
ãã &
(
ãã& '
name
ää 
:
ää 
$str
ää 
)
ää 
;
ää  
}
åå 	
}
ææ 
}çç Ä
C:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Migrations\PostgresDb\20210227145206_PostgreSqlInitialMigration.cs
	namespace 	
	CodeFirst
 
. 

Migrations 
. 

PostgresDb )
{ 
public 

partial 
class &
PostgreSqlInitialMigration 3
:4 5
	Migration6 ?
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
actor_id 
= 
table $
.$ %
Column% +
<+ ,
int, /
>/ 0
(0 1
type1 5
:5 6
$str7 @
,@ A
nullableB J
:J K
falseL Q
)Q R
. 

Annotation #
(# $
$str$ D
,D E)
NpgsqlValueGenerationStrategyF c
.c d#
IdentityByDefaultColumnd {
){ |
,| }

first_name 
=  
table! &
.& '
Column' -
<- .
string. 4
>4 5
(5 6
type6 :
:: ;
$str< B
,B C
nullableD L
:L M
trueN R
)R S
,S T
	last_name 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
type5 9
:9 :
$str; A
,A B
nullableC K
:K L
trueM Q
)Q R
,R S
birthday 
= 
table $
.$ %
Column% +
<+ ,
DateTime, 4
>4 5
(5 6
type6 :
:: ;
$str< Y
,Y Z
nullable[ c
:c d
truee i
)i j
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 1
,1 2
x3 4
=>5 7
x8 9
.9 :
actor_id: B
)B C
;C D
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
	client_id 
= 
table  %
.% &
Column& ,
<, -
int- 0
>0 1
(1 2
type2 6
:6 7
$str8 A
,A B
nullableC K
:K L
falseM R
)R S
. 

Annotation #
(# $
$str$ D
,D E)
NpgsqlValueGenerationStrategyF c
.c d#
IdentityByDefaultColumnd {
){ |
,| }

first_name   
=    
table  ! &
.  & '
Column  ' -
<  - .
string  . 4
>  4 5
(  5 6
type  6 :
:  : ;
$str  < B
,  B C
nullable  D L
:  L M
true  N R
)  R S
,  S T
	last_name!! 
=!! 
table!!  %
.!!% &
Column!!& ,
<!!, -
string!!- 3
>!!3 4
(!!4 5
type!!5 9
:!!9 :
$str!!; A
,!!A B
nullable!!C K
:!!K L
true!!M Q
)!!Q R
,!!R S
birthday"" 
="" 
table"" $
.""$ %
Column""% +
<""+ ,
DateTime"", 4
>""4 5
(""5 6
type""6 :
:"": ;
$str""< Y
,""Y Z
nullable""[ c
:""c d
true""e i
)""i j
}## 
,## 
constraints$$ 
:$$ 
table$$ "
=>$$# %
{%% 
table&& 
.&& 

PrimaryKey&& $
(&&$ %
$str&&% 2
,&&2 3
x&&4 5
=>&&6 8
x&&9 :
.&&: ;
	client_id&&; D
)&&D E
;&&E F
}'' 
)'' 
;'' 
migrationBuilder)) 
.)) 
CreateTable)) (
())( )
name** 
:** 
$str** !
,**! "
columns++ 
:++ 
table++ 
=>++ !
new++" %
{,, 
employee_id-- 
=--  !
table--" '
.--' (
Column--( .
<--. /
int--/ 2
>--2 3
(--3 4
type--4 8
:--8 9
$str--: C
,--C D
nullable--E M
:--M N
false--O T
)--T U
... 

Annotation.. #
(..# $
$str..$ D
,..D E)
NpgsqlValueGenerationStrategy..F c
...c d#
IdentityByDefaultColumn..d {
)..{ |
,..| }

first_name// 
=//  
table//! &
.//& '
Column//' -
<//- .
string//. 4
>//4 5
(//5 6
type//6 :
://: ;
$str//< B
,//B C
nullable//D L
://L M
false//N S
)//S T
,//T U
	last_name00 
=00 
table00  %
.00% &
Column00& ,
<00, -
string00- 3
>003 4
(004 5
type005 9
:009 :
$str00; A
,00A B
nullable00C K
:00K L
false00M R
)00R S
,00S T
salary11 
=11 
table11 "
.11" #
Column11# )
<11) *
float11* /
>11/ 0
(110 1
type111 5
:115 6
$str117 =
,11= >
nullable11? G
:11G H
true11I M
)11M N
,11N O
City22 
=22 
table22  
.22  !
Column22! '
<22' (
string22( .
>22. /
(22/ 0
type220 4
:224 5
$str226 <
,22< =
nullable22> F
:22F G
true22H L
)22L M
}33 
,33 
constraints44 
:44 
table44 "
=>44# %
{55 
table66 
.66 

PrimaryKey66 $
(66$ %
$str66% 2
,662 3
x664 5
=>666 8
x669 :
.66: ;
employee_id66; F
)66F G
;66G H
}77 
)77 
;77 
migrationBuilder99 
.99 
CreateTable99 (
(99( )
name:: 
::: 
$str:: 
,:: 
columns;; 
:;; 
table;; 
=>;; !
new;;" %
{<< 
movie_id== 
=== 
table== $
.==$ %
Column==% +
<==+ ,
int==, /
>==/ 0
(==0 1
type==1 5
:==5 6
$str==7 @
,==@ A
nullable==B J
:==J K
false==L Q
)==Q R
.>> 

Annotation>> #
(>># $
$str>>$ D
,>>D E)
NpgsqlValueGenerationStrategy>>F c
.>>c d#
IdentityByDefaultColumn>>d {
)>>{ |
,>>| }
title?? 
=?? 
table?? !
.??! "
Column??" (
<??( )
string??) /
>??/ 0
(??0 1
type??1 5
:??5 6
$str??7 =
,??= >
nullable??? G
:??G H
true??I M
)??M N
,??N O
year@@ 
=@@ 
table@@  
.@@  !
Column@@! '
<@@' (
int@@( +
>@@+ ,
(@@, -
type@@- 1
:@@1 2
$str@@3 <
,@@< =
nullable@@> F
:@@F G
false@@H M
)@@M N
,@@N O
age_restrictionAA #
=AA$ %
tableAA& +
.AA+ ,
ColumnAA, 2
<AA2 3
intAA3 6
>AA6 7
(AA7 8
typeAA8 <
:AA< =
$strAA> G
,AAG H
nullableAAI Q
:AAQ R
falseAAS X
)AAX Y
,AAY Z
priceBB 
=BB 
tableBB !
.BB! "
ColumnBB" (
<BB( )
floatBB) .
>BB. /
(BB/ 0
typeBB0 4
:BB4 5
$strBB6 <
,BB< =
nullableBB> F
:BBF G
falseBBH M
)BBM N
}CC 
,CC 
constraintsDD 
:DD 
tableDD "
=>DD# %
{EE 
tableFF 
.FF 

PrimaryKeyFF $
(FF$ %
$strFF% 2
,FF2 3
xFF4 5
=>FF6 8
xFF9 :
.FF: ;
movie_idFF; C
)FFC D
;FFD E
}GG 
)GG 
;GG 
migrationBuilderII 
.II 
CreateTableII (
(II( )
nameJJ 
:JJ 
$strJJ 
,JJ 
columnsKK 
:KK 
tableKK 
=>KK !
newKK" %
{LL 
copy_idMM 
=MM 
tableMM #
.MM# $
ColumnMM$ *
<MM* +
intMM+ .
>MM. /
(MM/ 0
typeMM0 4
:MM4 5
$strMM6 ?
,MM? @
nullableMMA I
:MMI J
falseMMK P
)MMP Q
.NN 

AnnotationNN #
(NN# $
$strNN$ D
,NND E)
NpgsqlValueGenerationStrategyNNF c
.NNc d#
IdentityByDefaultColumnNNd {
)NN{ |
,NN| }
	availableOO 
=OO 
tableOO  %
.OO% &
ColumnOO& ,
<OO, -
boolOO- 1
>OO1 2
(OO2 3
typeOO3 7
:OO7 8
$strOO9 B
,OOB C
nullableOOD L
:OOL M
falseOON S
)OOS T
,OOT U
movie_idPP 
=PP 
tablePP $
.PP$ %
ColumnPP% +
<PP+ ,
intPP, /
>PP/ 0
(PP0 1
typePP1 5
:PP5 6
$strPP7 @
,PP@ A
nullablePPB J
:PPJ K
falsePPL Q
)PPQ R
}QQ 
,QQ 
constraintsRR 
:RR 
tableRR "
=>RR# %
{SS 
tableTT 
.TT 

PrimaryKeyTT $
(TT$ %
$strTT% 2
,TT2 3
xTT4 5
=>TT6 8
xTT9 :
.TT: ;
copy_idTT; B
)TTB C
;TTC D
tableUU 
.UU 

ForeignKeyUU $
(UU$ %
nameVV 
:VV 
$strVV 9
,VV9 :
columnWW 
:WW 
xWW  !
=>WW" $
xWW% &
.WW& '
movie_idWW' /
,WW/ 0
principalTableXX &
:XX& '
$strXX( 0
,XX0 1
principalColumnYY '
:YY' (
$strYY) 3
,YY3 4
onDeleteZZ  
:ZZ  !
ReferentialActionZZ" 3
.ZZ3 4
CascadeZZ4 ;
)ZZ; <
;ZZ< =
}[[ 
)[[ 
;[[ 
migrationBuilder]] 
.]] 
CreateTable]] (
(]]( )
name^^ 
:^^ 
$str^^  
,^^  !
columns__ 
:__ 
table__ 
=>__ !
new__" %
{`` 
actor_idaa 
=aa 
tableaa $
.aa$ %
Columnaa% +
<aa+ ,
intaa, /
>aa/ 0
(aa0 1
typeaa1 5
:aa5 6
$straa7 @
,aa@ A
nullableaaB J
:aaJ K
falseaaL Q
)aaQ R
,aaR S
movie_idbb 
=bb 
tablebb $
.bb$ %
Columnbb% +
<bb+ ,
intbb, /
>bb/ 0
(bb0 1
typebb1 5
:bb5 6
$strbb7 @
,bb@ A
nullablebbB J
:bbJ K
falsebbL Q
)bbQ R
}cc 
,cc 
constraintsdd 
:dd 
tabledd "
=>dd# %
{ee 
tableff 
.ff 

PrimaryKeyff $
(ff$ %
$strff% 2
,ff2 3
xff4 5
=>ff6 8
newff9 <
{ff= >
xff? @
.ff@ A
actor_idffA I
,ffI J
xffK L
.ffL M
movie_idffM U
}ffV W
)ffW X
;ffX Y
tablegg 
.gg 

ForeignKeygg $
(gg$ %
namehh 
:hh 
$strhh ;
,hh; <
columnii 
:ii 
xii  !
=>ii" $
xii% &
.ii& '
actor_idii' /
,ii/ 0
principalTablejj &
:jj& '
$strjj( 0
,jj0 1
principalColumnkk '
:kk' (
$strkk) 3
,kk3 4
onDeletell  
:ll  !
ReferentialActionll" 3
.ll3 4
Cascadell4 ;
)ll; <
;ll< =
tablemm 
.mm 

ForeignKeymm $
(mm$ %
namenn 
:nn 
$strnn ;
,nn; <
columnoo 
:oo 
xoo  !
=>oo" $
xoo% &
.oo& '
movie_idoo' /
,oo/ 0
principalTablepp &
:pp& '
$strpp( 0
,pp0 1
principalColumnqq '
:qq' (
$strqq) 3
,qq3 4
onDeleterr  
:rr  !
ReferentialActionrr" 3
.rr3 4
Cascaderr4 ;
)rr; <
;rr< =
}ss 
)ss 
;ss 
migrationBuilderuu 
.uu 
CreateTableuu (
(uu( )
namevv 
:vv 
$strvv 
,vv  
columnsww 
:ww 
tableww 
=>ww !
newww" %
{xx 
copy_idyy 
=yy 
tableyy #
.yy# $
Columnyy$ *
<yy* +
intyy+ .
>yy. /
(yy/ 0
typeyy0 4
:yy4 5
$stryy6 ?
,yy? @
nullableyyA I
:yyI J
falseyyK P
)yyP Q
,yyQ R
	client_idzz 
=zz 
tablezz  %
.zz% &
Columnzz& ,
<zz, -
intzz- 0
>zz0 1
(zz1 2
typezz2 6
:zz6 7
$strzz8 A
,zzA B
nullablezzC K
:zzK L
falsezzM R
)zzR S
,zzS T
date_of_rental{{ "
={{# $
table{{% *
.{{* +
Column{{+ 1
<{{1 2
DateTime{{2 :
>{{: ;
({{; <
type{{< @
:{{@ A
$str{{B _
,{{_ `
nullable{{a i
:{{i j
true{{k o
){{o p
,{{p q
date_of_return|| "
=||# $
table||% *
.||* +
Column||+ 1
<||1 2
DateTime||2 :
>||: ;
(||; <
type||< @
:||@ A
$str||B _
,||_ `
nullable||a i
:||i j
true||k o
)||o p
}}} 
,}} 
constraints~~ 
:~~ 
table~~ "
=>~~# %
{ 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 3
,
3 4
x
5 6
=>
7 9
new
: =
{
> ?
x
@ A
.
A B
	client_id
B K
,
K L
x
M N
.
N O
copy_id
O V
}
W X
)
X Y
;
Y Z
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 <
,
< =
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	client_id
' 0
,
0 1
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) 4
,
4 5
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 9
,
9 :
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
copy_id
' .
,
. /
principalTable
 &
:
& '
$str
( 0
,
0 1
principalColumn
 '
:
' (
$str
) 2
,
2 3
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
 
,
  
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! +
,
+ ,
$str
- 7
,
7 8
$str
9 E
,
E F
$str
G R
}
S T
,
T U
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
new
 
DateTime
 %
(
% &
$num
& *
,
* +
$num
, -
,
- .
$num
/ 1
,
1 2
$num
3 4
,
4 5
$num
6 7
,
7 8
$num
9 :
,
: ;
$num
< =
,
= >
DateTimeKind
? K
.
K L
Unspecified
L W
)
W X
,
X Y
$str
Z b
,
b c
$str
d t
}
u v
,
v w
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 1
,
1 2
$num
3 4
,
4 5
$num
6 7
,
7 8
$num
9 :
,
: ;
$num
< =
,
= >
DateTimeKind
? K
.
K L
Unspecified
L W
)
W X
,
X Y
$str
Z _
,
_ `
$str
a i
}
j k
,
k l
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 1
,
1 2
$num
3 4
,
4 5
$num
6 7
,
7 8
$num
9 :
,
: ;
$num
< =
,
= >
DateTimeKind
? K
.
K L
Unspecified
L W
)
W X
,
X Y
$str
Z c
,
c d
$str
e n
}
o p
,
p q
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ a
,
a b
$str
c k
}
l m
,
m n
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ b
,
b c
$str
d m
}
n o
,
o p
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ a
,
a b
$str
c i
}
j k
,
k l
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ g
,
g h
$str
i r
}
s t
,
t u
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ e
,
e f
$str
g m
}
n o
,
o p
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 1
,
1 2
$num
3 4
,
4 5
$num
6 7
,
7 8
$num
9 :
,
: ;
$num
< =
,
= >
DateTimeKind
? K
.
K L
Unspecified
L W
)
W X
,
X Y
$str
Z c
,
c d
$str
e l
}
m n
,
n o
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ c
,
c d
$str
e l
}
m n
,
n o
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ `
,
` a
$str
b l
}
m n
,
n o
{
 
$num
 
,
 
new
 
DateTime
 &
(
& '
$num
' +
,
+ ,
$num
- .
,
. /
$num
0 2
,
2 3
$num
4 5
,
5 6
$num
7 8
,
8 9
$num
: ;
,
; <
$num
= >
,
> ?
DateTimeKind
@ L
.
L M
Unspecified
M X
)
X Y
,
Y Z
$str
[ c
,
c d
$str
e o
}
p q
,
q r
{
   
$num
   
,
   
new
   
DateTime
   &
(
  & '
$num
  ' +
,
  + ,
$num
  - .
,
  . /
$num
  0 2
,
  2 3
$num
  4 5
,
  5 6
$num
  7 8
,
  8 9
$num
  : ;
,
  ; <
$num
  = >
,
  > ?
DateTimeKind
  @ L
.
  L M
Unspecified
  M X
)
  X Y
,
  Y Z
$str
  [ c
,
  c d
$str
  e m
}
  n o
,
  o p
{
¡¡ 
$num
¡¡ 
,
¡¡ 
new
¡¡ 
DateTime
¡¡ &
(
¡¡& '
$num
¡¡' +
,
¡¡+ ,
$num
¡¡- /
,
¡¡/ 0
$num
¡¡1 3
,
¡¡3 4
$num
¡¡5 6
,
¡¡6 7
$num
¡¡8 9
,
¡¡9 :
$num
¡¡; <
,
¡¡< =
$num
¡¡> ?
,
¡¡? @
DateTimeKind
¡¡A M
.
¡¡M N
Unspecified
¡¡N Y
)
¡¡Y Z
,
¡¡Z [
$str
¡¡\ c
,
¡¡c d
$str
¡¡e m
}
¡¡n o
,
¡¡o p
{
¢¢ 
$num
¢¢ 
,
¢¢ 
new
¢¢ 
DateTime
¢¢ &
(
¢¢& '
$num
¢¢' +
,
¢¢+ ,
$num
¢¢- .
,
¢¢. /
$num
¢¢0 2
,
¢¢2 3
$num
¢¢4 5
,
¢¢5 6
$num
¢¢7 8
,
¢¢8 9
$num
¢¢: ;
,
¢¢; <
$num
¢¢= >
,
¢¢> ?
DateTimeKind
¢¢@ L
.
¢¢L M
Unspecified
¢¢M X
)
¢¢X Y
,
¢¢Y Z
$str
¢¢[ a
,
¢¢a b
$str
¢¢c k
}
¢¢l m
,
¢¢m n
{
££ 
$num
££ 
,
££ 
new
££ 
DateTime
££ &
(
££& '
$num
££' +
,
££+ ,
$num
££- /
,
££/ 0
$num
££1 2
,
££2 3
$num
££4 5
,
££5 6
$num
££7 8
,
££8 9
$num
££: ;
,
££; <
$num
££= >
,
££> ?
DateTimeKind
££@ L
.
££L M
Unspecified
££M X
)
££X Y
,
££Y Z
$str
££[ f
,
££f g
$str
££h p
}
££q r
,
££r s
{
¤¤ 
$num
¤¤ 
,
¤¤ 
new
¤¤ 
DateTime
¤¤ &
(
¤¤& '
$num
¤¤' +
,
¤¤+ ,
$num
¤¤- .
,
¤¤. /
$num
¤¤0 1
,
¤¤1 2
$num
¤¤3 4
,
¤¤4 5
$num
¤¤6 7
,
¤¤7 8
$num
¤¤9 :
,
¤¤: ;
$num
¤¤< =
,
¤¤= >
DateTimeKind
¤¤? K
.
¤¤K L
Unspecified
¤¤L W
)
¤¤W X
,
¤¤X Y
$str
¤¤Z _
,
¤¤_ `
$str
¤¤a j
}
¤¤k l
,
¤¤l m
{
¥¥ 
$num
¥¥ 
,
¥¥ 
new
¥¥ 
DateTime
¥¥ &
(
¥¥& '
$num
¥¥' +
,
¥¥+ ,
$num
¥¥- .
,
¥¥. /
$num
¥¥0 2
,
¥¥2 3
$num
¥¥4 5
,
¥¥5 6
$num
¥¥7 8
,
¥¥8 9
$num
¥¥: ;
,
¥¥; <
$num
¥¥= >
,
¥¥> ?
DateTimeKind
¥¥@ L
.
¥¥L M
Unspecified
¥¥M X
)
¥¥X Y
,
¥¥Y Z
$str
¥¥[ a
,
¥¥a b
$str
¥¥c k
}
¥¥l m
,
¥¥m n
{
¦¦ 
$num
¦¦ 
,
¦¦ 
new
¦¦ 
DateTime
¦¦ &
(
¦¦& '
$num
¦¦' +
,
¦¦+ ,
$num
¦¦- .
,
¦¦. /
$num
¦¦0 2
,
¦¦2 3
$num
¦¦4 5
,
¦¦5 6
$num
¦¦7 8
,
¦¦8 9
$num
¦¦: ;
,
¦¦; <
$num
¦¦= >
,
¦¦> ?
DateTimeKind
¦¦@ L
.
¦¦L M
Unspecified
¦¦M X
)
¦¦X Y
,
¦¦Y Z
$str
¦¦[ b
,
¦¦b c
$str
¦¦d n
}
¦¦o p
,
¦¦p q
{
§§ 
$num
§§ 
,
§§ 
new
§§ 
DateTime
§§ %
(
§§% &
$num
§§& *
,
§§* +
$num
§§, -
,
§§- .
$num
§§/ 1
,
§§1 2
$num
§§3 4
,
§§4 5
$num
§§6 7
,
§§7 8
$num
§§9 :
,
§§: ;
$num
§§< =
,
§§= >
DateTimeKind
§§? K
.
§§K L
Unspecified
§§L W
)
§§W X
,
§§X Y
$str
§§Z c
,
§§c d
$str
§§e l
}
§§m n
,
§§n o
{
¨¨ 
$num
¨¨ 
,
¨¨ 
new
¨¨ 
DateTime
¨¨ %
(
¨¨% &
$num
¨¨& *
,
¨¨* +
$num
¨¨, -
,
¨¨- .
$num
¨¨/ 0
,
¨¨0 1
$num
¨¨2 3
,
¨¨3 4
$num
¨¨5 6
,
¨¨6 7
$num
¨¨8 9
,
¨¨9 :
$num
¨¨; <
,
¨¨< =
DateTimeKind
¨¨> J
.
¨¨J K
Unspecified
¨¨K V
)
¨¨V W
,
¨¨W X
$str
¨¨Y `
,
¨¨` a
$str
¨¨b j
}
¨¨k l
,
¨¨l m
{
©© 
$num
©© 
,
©© 
new
©© 
DateTime
©© %
(
©©% &
$num
©©& *
,
©©* +
$num
©©, -
,
©©- .
$num
©©/ 1
,
©©1 2
$num
©©3 4
,
©©4 5
$num
©©6 7
,
©©7 8
$num
©©9 :
,
©©: ;
$num
©©< =
,
©©= >
DateTimeKind
©©? K
.
©©K L
Unspecified
©©L W
)
©©W X
,
©©X Y
$str
©©Z a
,
©©a b
$str
©©c k
}
©©l m
,
©©m n
{
ªª 
$num
ªª 
,
ªª 
new
ªª 
DateTime
ªª %
(
ªª% &
$num
ªª& *
,
ªª* +
$num
ªª, -
,
ªª- .
$num
ªª/ 1
,
ªª1 2
$num
ªª3 4
,
ªª4 5
$num
ªª6 7
,
ªª7 8
$num
ªª9 :
,
ªª: ;
$num
ªª< =
,
ªª= >
DateTimeKind
ªª? K
.
ªªK L
Unspecified
ªªL W
)
ªªW X
,
ªªX Y
$str
ªªZ a
,
ªªa b
$str
ªªc l
}
ªªm n
,
ªªn o
{
«« 
$num
«« 
,
«« 
new
«« 
DateTime
«« %
(
««% &
$num
««& *
,
««* +
$num
««, -
,
««- .
$num
««/ 0
,
««0 1
$num
««2 3
,
««3 4
$num
««5 6
,
««6 7
$num
««8 9
,
««9 :
$num
««; <
,
««< =
DateTimeKind
««> J
.
««J K
Unspecified
««K V
)
««V W
,
««W X
$str
««Y _
,
««_ `
$str
««a j
}
««k l
,
««l m
{
¬¬ 
$num
¬¬ 
,
¬¬ 
new
¬¬ 
DateTime
¬¬ %
(
¬¬% &
$num
¬¬& *
,
¬¬* +
$num
¬¬, .
,
¬¬. /
$num
¬¬0 2
,
¬¬2 3
$num
¬¬4 5
,
¬¬5 6
$num
¬¬7 8
,
¬¬8 9
$num
¬¬: ;
,
¬¬; <
$num
¬¬= >
,
¬¬> ?
DateTimeKind
¬¬@ L
.
¬¬L M
Unspecified
¬¬M X
)
¬¬X Y
,
¬¬Y Z
$str
¬¬[ c
,
¬¬c d
$str
¬¬e m
}
¬¬n o
,
¬¬o p
{
­­ 
$num
­­ 
,
­­ 
new
­­ 
DateTime
­­ %
(
­­% &
$num
­­& *
,
­­* +
$num
­­, -
,
­­- .
$num
­­/ 1
,
­­1 2
$num
­­3 4
,
­­4 5
$num
­­6 7
,
­­7 8
$num
­­9 :
,
­­: ;
$num
­­< =
,
­­= >
DateTimeKind
­­? K
.
­­K L
Unspecified
­­L W
)
­­W X
,
­­X Y
$str
­­Z d
,
­­d e
$str
­­f l
}
­­m n
,
­­n o
{
®® 
$num
®® 
,
®® 
new
®® 
DateTime
®® %
(
®®% &
$num
®®& *
,
®®* +
$num
®®, -
,
®®- .
$num
®®/ 1
,
®®1 2
$num
®®3 4
,
®®4 5
$num
®®6 7
,
®®7 8
$num
®®9 :
,
®®: ;
$num
®®< =
,
®®= >
DateTimeKind
®®? K
.
®®K L
Unspecified
®®L W
)
®®W X
,
®®X Y
$str
®®Z c
,
®®c d
$str
®®e n
}
®®o p
,
®®p q
{
¯¯ 
$num
¯¯ 
,
¯¯ 
new
¯¯ 
DateTime
¯¯ &
(
¯¯& '
$num
¯¯' +
,
¯¯+ ,
$num
¯¯- .
,
¯¯. /
$num
¯¯0 2
,
¯¯2 3
$num
¯¯4 5
,
¯¯5 6
$num
¯¯7 8
,
¯¯8 9
$num
¯¯: ;
,
¯¯; <
$num
¯¯= >
,
¯¯> ?
DateTimeKind
¯¯@ L
.
¯¯L M
Unspecified
¯¯M X
)
¯¯X Y
,
¯¯Y Z
$str
¯¯[ c
,
¯¯c d
$str
¯¯e n
}
¯¯o p
}
°° 
)
°° 
;
°° 
migrationBuilder
²² 
.
²² 

InsertData
²² '
(
²²' (
table
³³ 
:
³³ 
$str
³³  
,
³³  !
columns
´´ 
:
´´ 
new
´´ 
[
´´ 
]
´´ 
{
´´  
$str
´´! ,
,
´´, -
$str
´´. 8
,
´´8 9
$str
´´: F
,
´´F G
$str
´´H S
}
´´T U
,
´´U V
values
µµ 
:
µµ 
new
µµ 
object
µµ "
[
µµ" #
,
µµ# $
]
µµ$ %
{
¶¶ 
{
·· 
$num
·· 
,
·· 
new
·· 
DateTime
·· %
(
··% &
$num
··& *
,
··* +
$num
··, -
,
··- .
$num
··/ 1
,
··1 2
$num
··3 4
,
··4 5
$num
··6 7
,
··7 8
$num
··9 :
,
··: ;
$num
··< =
,
··= >
DateTimeKind
··? K
.
··K L
Unspecified
··L W
)
··W X
,
··X Y
$str
··Z `
,
··` a
$str
··b k
}
··l m
,
··m n
{
¸¸ 
$num
¸¸ 
,
¸¸ 
new
¸¸ 
DateTime
¸¸ %
(
¸¸% &
$num
¸¸& *
,
¸¸* +
$num
¸¸, -
,
¸¸- .
$num
¸¸/ 0
,
¸¸0 1
$num
¸¸2 3
,
¸¸3 4
$num
¸¸5 6
,
¸¸6 7
$num
¸¸8 9
,
¸¸9 :
$num
¸¸; <
,
¸¸< =
DateTimeKind
¸¸> J
.
¸¸J K
Unspecified
¸¸K V
)
¸¸V W
,
¸¸W X
$str
¸¸Y _
,
¸¸_ `
$str
¸¸a j
}
¸¸k l
,
¸¸l m
{
¹¹ 
$num
¹¹ 
,
¹¹ 
new
¹¹ 
DateTime
¹¹ %
(
¹¹% &
$num
¹¹& *
,
¹¹* +
$num
¹¹, -
,
¹¹- .
$num
¹¹/ 1
,
¹¹1 2
$num
¹¹3 4
,
¹¹4 5
$num
¹¹6 7
,
¹¹7 8
$num
¹¹9 :
,
¹¹: ;
$num
¹¹< =
,
¹¹= >
DateTimeKind
¹¹? K
.
¹¹K L
Unspecified
¹¹L W
)
¹¹W X
,
¹¹X Y
$str
¹¹Z _
,
¹¹_ `
$str
¹¹a j
}
¹¹k l
,
¹¹l m
{
ºº 
$num
ºº 
,
ºº 
new
ºº 
DateTime
ºº %
(
ºº% &
$num
ºº& *
,
ºº* +
$num
ºº, -
,
ºº- .
$num
ºº/ 1
,
ºº1 2
$num
ºº3 4
,
ºº4 5
$num
ºº6 7
,
ºº7 8
$num
ºº9 :
,
ºº: ;
$num
ºº< =
,
ºº= >
DateTimeKind
ºº? K
.
ººK L
Unspecified
ººL W
)
ººW X
,
ººX Y
$str
ººZ a
,
ººa b
$str
ººc l
}
ººm n
,
ººn o
{
»» 
$num
»» 
,
»» 
new
»» 
DateTime
»» %
(
»»% &
$num
»»& *
,
»»* +
$num
»», -
,
»»- .
$num
»»/ 1
,
»»1 2
$num
»»3 4
,
»»4 5
$num
»»6 7
,
»»7 8
$num
»»9 :
,
»»: ;
$num
»»< =
,
»»= >
DateTimeKind
»»? K
.
»»K L
Unspecified
»»L W
)
»»W X
,
»»X Y
$str
»»Z `
,
»»` a
$str
»»b h
}
»»i j
,
»»j k
{
¼¼ 
$num
¼¼ 
,
¼¼ 
new
¼¼ 
DateTime
¼¼ %
(
¼¼% &
$num
¼¼& *
,
¼¼* +
$num
¼¼, -
,
¼¼- .
$num
¼¼/ 1
,
¼¼1 2
$num
¼¼3 4
,
¼¼4 5
$num
¼¼6 7
,
¼¼7 8
$num
¼¼9 :
,
¼¼: ;
$num
¼¼< =
,
¼¼= >
DateTimeKind
¼¼? K
.
¼¼K L
Unspecified
¼¼L W
)
¼¼W X
,
¼¼X Y
$str
¼¼Z `
,
¼¼` a
$str
¼¼b m
}
¼¼n o
}
½½ 
)
½½ 
;
½½ 
migrationBuilder
¿¿ 
.
¿¿ 

InsertData
¿¿ '
(
¿¿' (
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ "
,
ÀÀ" #
columns
ÁÁ 
:
ÁÁ 
new
ÁÁ 
[
ÁÁ 
]
ÁÁ 
{
ÁÁ  
$str
ÁÁ! .
,
ÁÁ. /
$str
ÁÁ0 6
,
ÁÁ6 7
$str
ÁÁ8 D
,
ÁÁD E
$str
ÁÁF Q
,
ÁÁQ R
$str
ÁÁS [
}
ÁÁ\ ]
,
ÁÁ] ^
values
ÂÂ 
:
ÂÂ 
new
ÂÂ 
object
ÂÂ "
[
ÂÂ" #
,
ÂÂ# $
]
ÂÂ$ %
{
ÃÃ 
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
$str
ÄÄ #
,
ÄÄ# $
$str
ÄÄ% +
,
ÄÄ+ ,
$str
ÄÄ- 4
,
ÄÄ4 5
$num
ÄÄ6 :
}
ÄÄ; <
,
ÄÄ< =
{
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
$str
ÅÅ #
,
ÅÅ# $
$str
ÅÅ% *
,
ÅÅ* +
$str
ÅÅ, 5
,
ÅÅ5 6
$num
ÅÅ7 ;
}
ÅÅ< =
,
ÅÅ= >
{
ÆÆ 
$num
ÆÆ 
,
ÆÆ 
$str
ÆÆ &
,
ÆÆ& '
$str
ÆÆ( /
,
ÆÆ/ 0
$str
ÆÆ1 <
,
ÆÆ< =
$num
ÆÆ> A
}
ÆÆB C
,
ÆÆC D
{
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
$str
ÇÇ !
,
ÇÇ! "
$str
ÇÇ# )
,
ÇÇ) *
$str
ÇÇ+ 3
,
ÇÇ3 4
$num
ÇÇ5 9
}
ÇÇ: ;
,
ÇÇ; <
{
ÈÈ 
$num
ÈÈ 
,
ÈÈ 
$str
ÈÈ !
,
ÈÈ! "
$str
ÈÈ# *
,
ÈÈ* +
$str
ÈÈ, 5
,
ÈÈ5 6
$num
ÈÈ7 ;
}
ÈÈ< =
}
ÉÉ 
)
ÉÉ 
;
ÉÉ 
migrationBuilder
ËË 
.
ËË 

InsertData
ËË '
(
ËË' (
table
ÌÌ 
:
ÌÌ 
$str
ÌÌ 
,
ÌÌ  
columns
ÍÍ 
:
ÍÍ 
new
ÍÍ 
[
ÍÍ 
]
ÍÍ 
{
ÍÍ  
$str
ÍÍ! +
,
ÍÍ+ ,
$str
ÍÍ- >
,
ÍÍ> ?
$str
ÍÍ@ G
,
ÍÍG H
$str
ÍÍI P
,
ÍÍP Q
$str
ÍÍR X
}
ÍÍY Z
,
ÍÍZ [
values
ÎÎ 
:
ÎÎ 
new
ÎÎ 
object
ÎÎ "
[
ÎÎ" #
,
ÎÎ# $
]
ÎÎ$ %
{
ÏÏ 
{
ÐÐ 
$num
ÐÐ 
,
ÐÐ 
$num
ÐÐ 
,
ÐÐ 
$num
ÐÐ "
,
ÐÐ" #
$str
ÐÐ$ 2
,
ÐÐ2 3
$num
ÐÐ4 8
}
ÐÐ9 :
,
ÐÐ: ;
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$num
ÑÑ !
,
ÑÑ! "
$str
ÑÑ# *
,
ÑÑ* +
$num
ÑÑ, 0
}
ÑÑ1 2
,
ÑÑ2 3
{
ÒÒ 
$num
ÒÒ 
,
ÒÒ 
$num
ÒÒ 
,
ÒÒ 
$num
ÒÒ !
,
ÒÒ! "
$str
ÒÒ# ,
,
ÒÒ, -
$num
ÒÒ. 2
}
ÒÒ3 4
,
ÒÒ4 5
{
ÓÓ 
$num
ÓÓ 
,
ÓÓ 
$num
ÓÓ 
,
ÓÓ 
$num
ÓÓ 
,
ÓÓ  
$str
ÓÓ! *
,
ÓÓ* +
$num
ÓÓ, 0
}
ÓÓ1 2
,
ÓÓ2 3
{
ÔÔ 
$num
ÔÔ 
,
ÔÔ 
$num
ÔÔ 
,
ÔÔ 
$num
ÔÔ  
,
ÔÔ  !
$str
ÔÔ" D
,
ÔÔD E
$num
ÔÔF J
}
ÔÔK L
,
ÔÔL M
{
ÕÕ 
$num
ÕÕ 
,
ÕÕ 
$num
ÕÕ 
,
ÕÕ 
$num
ÕÕ !
,
ÕÕ! "
$str
ÕÕ# /
,
ÕÕ/ 0
$num
ÕÕ1 5
}
ÕÕ6 7
,
ÕÕ7 8
{
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
$num
ÖÖ !
,
ÖÖ! "
$str
ÖÖ# 1
,
ÖÖ1 2
$num
ÖÖ3 7
}
ÖÖ8 9
,
ÖÖ9 :
{
×× 
$num
×× 
,
×× 
$num
×× 
,
×× 
$num
×× !
,
××! "
$str
××# ;
,
××; <
$num
××= A
}
××B C
,
××C D
{
ØØ 
$num
ØØ 
,
ØØ 
$num
ØØ 
,
ØØ 
$num
ØØ 
,
ØØ  
$str
ØØ! .
,
ØØ. /
$num
ØØ0 4
}
ØØ5 6
,
ØØ6 7
{
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
$num
ÙÙ "
,
ÙÙ" #
$str
ÙÙ$ 8
,
ÙÙ8 9
$num
ÙÙ: >
}
ÙÙ? @
}
ÚÚ 
)
ÚÚ 
;
ÚÚ 
migrationBuilder
ÜÜ 
.
ÜÜ 

InsertData
ÜÜ '
(
ÜÜ' (
table
ÝÝ 
:
ÝÝ 
$str
ÝÝ 
,
ÝÝ  
columns
ÞÞ 
:
ÞÞ 
new
ÞÞ 
[
ÞÞ 
]
ÞÞ 
{
ÞÞ  
$str
ÞÞ! *
,
ÞÞ* +
$str
ÞÞ, 7
,
ÞÞ7 8
$str
ÞÞ9 C
}
ÞÞD E
,
ÞÞE F
values
ßß 
:
ßß 
new
ßß 
object
ßß "
[
ßß" #
,
ßß# $
]
ßß$ %
{
àà 
{
áá 
$num
áá 
,
áá 
true
áá 
,
áá 
$num
áá  
}
áá! "
,
áá" #
{
ââ 
$num
ââ 
,
ââ 
true
ââ 
,
ââ 
$num
ââ  !
}
ââ" #
,
ââ# $
{
ãã 
$num
ãã 
,
ãã 
false
ãã 
,
ãã 
$num
ãã  !
}
ãã" #
,
ãã# $
{
ää 
$num
ää 
,
ää 
true
ää 
,
ää 
$num
ää  !
}
ää" #
,
ää# $
{
åå 
$num
åå 
,
åå 
true
åå 
,
åå 
$num
åå  !
}
åå" #
,
åå# $
{
ææ 
$num
ææ 
,
ææ 
true
ææ 
,
ææ 
$num
ææ  
}
ææ! "
,
ææ" #
{
çç 
$num
çç 
,
çç 
false
çç 
,
çç  
$num
çç! "
}
çç# $
,
çç$ %
{
èè 
$num
èè 
,
èè 
true
èè 
,
èè 
$num
èè  
}
èè! "
,
èè" #
{
éé 
$num
éé 
,
éé 
false
éé 
,
éé  
$num
éé! "
}
éé# $
,
éé$ %
{
êê 
$num
êê 
,
êê 
true
êê 
,
êê 
$num
êê  
}
êê! "
,
êê" #
{
ëë 
$num
ëë 
,
ëë 
false
ëë 
,
ëë 
$num
ëë  !
}
ëë" #
,
ëë# $
{
ìì 
$num
ìì 
,
ìì 
false
ìì 
,
ìì  
$num
ìì! #
}
ìì$ %
,
ìì% &
{
íí 
$num
íí 
,
íí 
false
íí 
,
íí 
$num
íí  !
}
íí" #
,
íí# $
{
îî 
$num
îî 
,
îî 
true
îî 
,
îî 
$num
îî  "
}
îî# $
,
îî$ %
{
ïï 
$num
ïï 
,
ïï 
true
ïï 
,
ïï 
$num
ïï  "
}
ïï# $
,
ïï$ %
{
ðð 
$num
ðð 
,
ðð 
true
ðð 
,
ðð 
$num
ðð  "
}
ðð# $
,
ðð$ %
{
ññ 
$num
ññ 
,
ññ 
true
ññ 
,
ññ 
$num
ññ  !
}
ññ" #
,
ññ# $
{
òò 
$num
òò 
,
òò 
true
òò 
,
òò 
$num
òò  
}
òò! "
,
òò" #
{
óó 
$num
óó 
,
óó 
true
óó 
,
óó 
$num
óó  
}
óó! "
,
óó" #
{
ôô 
$num
ôô 
,
ôô 
true
ôô 
,
ôô 
$num
ôô  "
}
ôô# $
}
õõ 
)
õõ 
;
õõ 
migrationBuilder
÷÷ 
.
÷÷ 

InsertData
÷÷ '
(
÷÷' (
table
øø 
:
øø 
$str
øø !
,
øø! "
columns
ùù 
:
ùù 
new
ùù 
[
ùù 
]
ùù 
{
ùù  
$str
ùù! +
,
ùù+ ,
$str
ùù- 7
}
ùù8 9
,
ùù9 :
values
úú 
:
úú 
new
úú 
object
úú "
[
úú" #
,
úú# $
]
úú$ %
{
ûû 
{
üü 
$num
üü 
,
üü 
$num
üü 
}
üü 
,
üü 
{
ýý 
$num
ýý 
,
ýý 
$num
ýý 
}
ýý 
,
ýý 
{
þþ 
$num
þþ 
,
þþ 
$num
þþ 
}
þþ 
,
þþ 
{
ÿÿ 
$num
ÿÿ 
,
ÿÿ 
$num
ÿÿ 
}
ÿÿ 
,
ÿÿ 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
,
 
{
 
$num
 
,
 
$num
 
}
 
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
  
,
  !
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! ,
,
, -
$str
. 7
,
7 8
$str
9 I
,
I J
$str
K [
}
\ ]
,
] ^
values
   
:
   
new
   
object
   "
[
  " #
,
  # $
]
  $ %
{
¡¡ 
{
¢¢ 
$num
¢¢ 
,
¢¢ 
$num
¢¢ 
,
¢¢ 
new
¢¢ 
DateTime
¢¢  (
(
¢¢( )
$num
¢¢) -
,
¢¢- .
$num
¢¢/ 0
,
¢¢0 1
$num
¢¢2 3
,
¢¢3 4
$num
¢¢5 6
,
¢¢6 7
$num
¢¢8 9
,
¢¢9 :
$num
¢¢; <
,
¢¢< =
$num
¢¢> ?
,
¢¢? @
DateTimeKind
¢¢A M
.
¢¢M N
Unspecified
¢¢N Y
)
¢¢Y Z
,
¢¢Z [
new
¢¢\ _
DateTime
¢¢` h
(
¢¢h i
$num
¢¢i m
,
¢¢m n
$num
¢¢o p
,
¢¢p q
$num
¢¢r s
,
¢¢s t
$num
¢¢u v
,
¢¢v w
$num
¢¢x y
,
¢¢y z
$num
¢¢{ |
,
¢¢| }
$num
¢¢~ 
,¢¢ 
DateTimeKind¢¢ 
.¢¢ 
Unspecified¢¢ 
)¢¢ 
}¢¢ 
,¢¢ 
{
££ 
$num
££ 
,
££ 
$num
££ 
,
££ 
new
££ 
DateTime
££  (
(
££( )
$num
££) -
,
££- .
$num
££/ 0
,
££0 1
$num
££2 3
,
££3 4
$num
££5 6
,
££6 7
$num
££8 9
,
££9 :
$num
££; <
,
££< =
$num
££> ?
,
££? @
DateTimeKind
££A M
.
££M N
Unspecified
££N Y
)
££Y Z
,
££Z [
new
££\ _
DateTime
££` h
(
££h i
$num
££i m
,
££m n
$num
££o p
,
££p q
$num
££r s
,
££s t
$num
££u v
,
££v w
$num
££x y
,
££y z
$num
££{ |
,
££| }
$num
££~ 
,££ 
DateTimeKind££ 
.££ 
Unspecified££ 
)££ 
}££ 
,££ 
{
¤¤ 
$num
¤¤ 
,
¤¤ 
$num
¤¤ 
,
¤¤ 
new
¤¤ 
DateTime
¤¤  (
(
¤¤( )
$num
¤¤) -
,
¤¤- .
$num
¤¤/ 0
,
¤¤0 1
$num
¤¤2 4
,
¤¤4 5
$num
¤¤6 7
,
¤¤7 8
$num
¤¤9 :
,
¤¤: ;
$num
¤¤< =
,
¤¤= >
$num
¤¤? @
,
¤¤@ A
DateTimeKind
¤¤B N
.
¤¤N O
Unspecified
¤¤O Z
)
¤¤Z [
,
¤¤[ \
new
¤¤] `
DateTime
¤¤a i
(
¤¤i j
$num
¤¤j n
,
¤¤n o
$num
¤¤p q
,
¤¤q r
$num
¤¤s u
,
¤¤u v
$num
¤¤w x
,
¤¤x y
$num
¤¤z {
,
¤¤{ |
$num
¤¤} ~
,
¤¤~ 
$num¤¤ 
,¤¤ 
DateTimeKind¤¤ 
.¤¤ 
Unspecified¤¤ 
)¤¤ 
}¤¤ 
,¤¤ 
{
¥¥ 
$num
¥¥ 
,
¥¥ 
$num
¥¥ 
,
¥¥ 
new
¥¥ 
DateTime
¥¥  (
(
¥¥( )
$num
¥¥) -
,
¥¥- .
$num
¥¥/ 0
,
¥¥0 1
$num
¥¥2 4
,
¥¥4 5
$num
¥¥6 7
,
¥¥7 8
$num
¥¥9 :
,
¥¥: ;
$num
¥¥< =
,
¥¥= >
$num
¥¥? @
,
¥¥@ A
DateTimeKind
¥¥B N
.
¥¥N O
Unspecified
¥¥O Z
)
¥¥Z [
,
¥¥[ \
new
¥¥] `
DateTime
¥¥a i
(
¥¥i j
$num
¥¥j n
,
¥¥n o
$num
¥¥p q
,
¥¥q r
$num
¥¥s u
,
¥¥u v
$num
¥¥w x
,
¥¥x y
$num
¥¥z {
,
¥¥{ |
$num
¥¥} ~
,
¥¥~ 
$num¥¥ 
,¥¥ 
DateTimeKind¥¥ 
.¥¥ 
Unspecified¥¥ 
)¥¥ 
}¥¥ 
,¥¥ 
{
¦¦ 
$num
¦¦ 
,
¦¦ 
$num
¦¦ 
,
¦¦ 
new
¦¦ 
DateTime
¦¦  (
(
¦¦( )
$num
¦¦) -
,
¦¦- .
$num
¦¦/ 0
,
¦¦0 1
$num
¦¦2 4
,
¦¦4 5
$num
¦¦6 7
,
¦¦7 8
$num
¦¦9 :
,
¦¦: ;
$num
¦¦< =
,
¦¦= >
$num
¦¦? @
,
¦¦@ A
DateTimeKind
¦¦B N
.
¦¦N O
Unspecified
¦¦O Z
)
¦¦Z [
,
¦¦[ \
new
¦¦] `
DateTime
¦¦a i
(
¦¦i j
$num
¦¦j n
,
¦¦n o
$num
¦¦p q
,
¦¦q r
$num
¦¦s u
,
¦¦u v
$num
¦¦w x
,
¦¦x y
$num
¦¦z {
,
¦¦{ |
$num
¦¦} ~
,
¦¦~ 
$num¦¦ 
,¦¦ 
DateTimeKind¦¦ 
.¦¦ 
Unspecified¦¦ 
)¦¦ 
}¦¦ 
,¦¦ 
{
§§ 
$num
§§ 
,
§§ 
$num
§§ 
,
§§ 
new
§§ 
DateTime
§§  (
(
§§( )
$num
§§) -
,
§§- .
$num
§§/ 0
,
§§0 1
$num
§§2 4
,
§§4 5
$num
§§6 7
,
§§7 8
$num
§§9 :
,
§§: ;
$num
§§< =
,
§§= >
$num
§§? @
,
§§@ A
DateTimeKind
§§B N
.
§§N O
Unspecified
§§O Z
)
§§Z [
,
§§[ \
new
§§] `
DateTime
§§a i
(
§§i j
$num
§§j n
,
§§n o
$num
§§p q
,
§§q r
$num
§§s u
,
§§u v
$num
§§w x
,
§§x y
$num
§§z {
,
§§{ |
$num
§§} ~
,
§§~ 
$num§§ 
,§§ 
DateTimeKind§§ 
.§§ 
Unspecified§§ 
)§§ 
}§§ 
,§§ 
{
¨¨ 
$num
¨¨ 
,
¨¨ 
$num
¨¨ 
,
¨¨ 
new
¨¨ 
DateTime
¨¨  (
(
¨¨( )
$num
¨¨) -
,
¨¨- .
$num
¨¨/ 0
,
¨¨0 1
$num
¨¨2 4
,
¨¨4 5
$num
¨¨6 7
,
¨¨7 8
$num
¨¨9 :
,
¨¨: ;
$num
¨¨< =
,
¨¨= >
$num
¨¨? @
,
¨¨@ A
DateTimeKind
¨¨B N
.
¨¨N O
Unspecified
¨¨O Z
)
¨¨Z [
,
¨¨[ \
new
¨¨] `
DateTime
¨¨a i
(
¨¨i j
$num
¨¨j n
,
¨¨n o
$num
¨¨p q
,
¨¨q r
$num
¨¨s u
,
¨¨u v
$num
¨¨w x
,
¨¨x y
$num
¨¨z {
,
¨¨{ |
$num
¨¨} ~
,
¨¨~ 
$num¨¨ 
,¨¨ 
DateTimeKind¨¨ 
.¨¨ 
Unspecified¨¨ 
)¨¨ 
}¨¨ 
,¨¨ 
{
©© 
$num
©© 
,
©© 
$num
©© 
,
©© 
new
©© 
DateTime
©©  (
(
©©( )
$num
©©) -
,
©©- .
$num
©©/ 0
,
©©0 1
$num
©©2 4
,
©©4 5
$num
©©6 7
,
©©7 8
$num
©©9 :
,
©©: ;
$num
©©< =
,
©©= >
$num
©©? @
,
©©@ A
DateTimeKind
©©B N
.
©©N O
Unspecified
©©O Z
)
©©Z [
,
©©[ \
new
©©] `
DateTime
©©a i
(
©©i j
$num
©©j n
,
©©n o
$num
©©p q
,
©©q r
$num
©©s u
,
©©u v
$num
©©w x
,
©©x y
$num
©©z {
,
©©{ |
$num
©©} ~
,
©©~ 
$num©© 
,©© 
DateTimeKind©© 
.©© 
Unspecified©© 
)©© 
}©© 
,©© 
{
ªª 
$num
ªª 
,
ªª 
$num
ªª 
,
ªª 
new
ªª 
DateTime
ªª  (
(
ªª( )
$num
ªª) -
,
ªª- .
$num
ªª/ 0
,
ªª0 1
$num
ªª2 4
,
ªª4 5
$num
ªª6 7
,
ªª7 8
$num
ªª9 :
,
ªª: ;
$num
ªª< =
,
ªª= >
$num
ªª? @
,
ªª@ A
DateTimeKind
ªªB N
.
ªªN O
Unspecified
ªªO Z
)
ªªZ [
,
ªª[ \
new
ªª] `
DateTime
ªªa i
(
ªªi j
$num
ªªj n
,
ªªn o
$num
ªªp q
,
ªªq r
$num
ªªs u
,
ªªu v
$num
ªªw x
,
ªªx y
$num
ªªz {
,
ªª{ |
$num
ªª} ~
,
ªª~ 
$numªª 
,ªª 
DateTimeKindªª 
.ªª 
Unspecifiedªª 
)ªª 
}ªª 
,ªª 
{
«« 
$num
«« 
,
«« 
$num
«« 
,
«« 
new
««  
DateTime
««! )
(
««) *
$num
««* .
,
««. /
$num
««0 1
,
««1 2
$num
««3 5
,
««5 6
$num
««7 8
,
««8 9
$num
««: ;
,
««; <
$num
««= >
,
««> ?
$num
««@ A
,
««A B
DateTimeKind
««C O
.
««O P
Unspecified
««P [
)
««[ \
,
««\ ]
new
««^ a
DateTime
««b j
(
««j k
$num
««k o
,
««o p
$num
««q r
,
««r s
$num
««t v
,
««v w
$num
««x y
,
««y z
$num
««{ |
,
««| }
$num
««~ 
,«« 
$num«« 
,«« 
DateTimeKind«« 
.«« 
Unspecified«« 
)«« 
}«« 
,««  
{
¬¬ 
$num
¬¬ 
,
¬¬ 
$num
¬¬ 
,
¬¬ 
new
¬¬  
DateTime
¬¬! )
(
¬¬) *
$num
¬¬* .
,
¬¬. /
$num
¬¬0 1
,
¬¬1 2
$num
¬¬3 5
,
¬¬5 6
$num
¬¬7 8
,
¬¬8 9
$num
¬¬: ;
,
¬¬; <
$num
¬¬= >
,
¬¬> ?
$num
¬¬@ A
,
¬¬A B
DateTimeKind
¬¬C O
.
¬¬O P
Unspecified
¬¬P [
)
¬¬[ \
,
¬¬\ ]
new
¬¬^ a
DateTime
¬¬b j
(
¬¬j k
$num
¬¬k o
,
¬¬o p
$num
¬¬q r
,
¬¬r s
$num
¬¬t v
,
¬¬v w
$num
¬¬x y
,
¬¬y z
$num
¬¬{ |
,
¬¬| }
$num
¬¬~ 
,¬¬ 
$num¬¬ 
,¬¬ 
DateTimeKind¬¬ 
.¬¬ 
Unspecified¬¬ 
)¬¬ 
}¬¬ 
,¬¬  
{
­­ 
$num
­­ 
,
­­ 
$num
­­ 
,
­­ 
new
­­  
DateTime
­­! )
(
­­) *
$num
­­* .
,
­­. /
$num
­­0 1
,
­­1 2
$num
­­3 4
,
­­4 5
$num
­­6 7
,
­­7 8
$num
­­9 :
,
­­: ;
$num
­­< =
,
­­= >
$num
­­? @
,
­­@ A
DateTimeKind
­­B N
.
­­N O
Unspecified
­­O Z
)
­­Z [
,
­­[ \
new
­­] `
DateTime
­­a i
(
­­i j
$num
­­j n
,
­­n o
$num
­­p q
,
­­q r
$num
­­s t
,
­­t u
$num
­­v w
,
­­w x
$num
­­y z
,
­­z {
$num
­­| }
,
­­} ~
$num­­ 
,­­ 
DateTimeKind­­ 
.­­ 
Unspecified­­ 
)­­ 
}­­ 
,­­ 
{
®® 
$num
®® 
,
®® 
$num
®® 
,
®® 
new
®®  
DateTime
®®! )
(
®®) *
$num
®®* .
,
®®. /
$num
®®0 1
,
®®1 2
$num
®®3 5
,
®®5 6
$num
®®7 8
,
®®8 9
$num
®®: ;
,
®®; <
$num
®®= >
,
®®> ?
$num
®®@ A
,
®®A B
DateTimeKind
®®C O
.
®®O P
Unspecified
®®P [
)
®®[ \
,
®®\ ]
new
®®^ a
DateTime
®®b j
(
®®j k
$num
®®k o
,
®®o p
$num
®®q r
,
®®r s
$num
®®t v
,
®®v w
$num
®®x y
,
®®y z
$num
®®{ |
,
®®| }
$num
®®~ 
,®® 
$num®® 
,®® 
DateTimeKind®® 
.®® 
Unspecified®® 
)®® 
}®® 
,®®  
{
¯¯ 
$num
¯¯ 
,
¯¯ 
$num
¯¯ 
,
¯¯ 
new
¯¯  
DateTime
¯¯! )
(
¯¯) *
$num
¯¯* .
,
¯¯. /
$num
¯¯0 1
,
¯¯1 2
$num
¯¯3 5
,
¯¯5 6
$num
¯¯7 8
,
¯¯8 9
$num
¯¯: ;
,
¯¯; <
$num
¯¯= >
,
¯¯> ?
$num
¯¯@ A
,
¯¯A B
DateTimeKind
¯¯C O
.
¯¯O P
Unspecified
¯¯P [
)
¯¯[ \
,
¯¯\ ]
new
¯¯^ a
DateTime
¯¯b j
(
¯¯j k
$num
¯¯k o
,
¯¯o p
$num
¯¯q r
,
¯¯r s
$num
¯¯t v
,
¯¯v w
$num
¯¯x y
,
¯¯y z
$num
¯¯{ |
,
¯¯| }
$num
¯¯~ 
,¯¯ 
$num¯¯ 
,¯¯ 
DateTimeKind¯¯ 
.¯¯ 
Unspecified¯¯ 
)¯¯ 
}¯¯ 
}
°° 
)
°° 
;
°° 
migrationBuilder
²² 
.
²² 
CreateIndex
²² (
(
²²( )
name
³³ 
:
³³ 
$str
³³ *
,
³³* +
table
´´ 
:
´´ 
$str
´´ 
,
´´  
column
µµ 
:
µµ 
$str
µµ "
)
µµ" #
;
µµ# $
migrationBuilder
·· 
.
·· 
CreateIndex
·· (
(
··( )
name
¸¸ 
:
¸¸ 
$str
¸¸ *
,
¸¸* +
table
¹¹ 
:
¹¹ 
$str
¹¹  
,
¹¹  !
column
ºº 
:
ºº 
$str
ºº !
)
ºº! "
;
ºº" #
migrationBuilder
¼¼ 
.
¼¼ 
CreateIndex
¼¼ (
(
¼¼( )
name
½½ 
:
½½ 
$str
½½ ,
,
½½, -
table
¾¾ 
:
¾¾ 
$str
¾¾ !
,
¾¾! "
column
¿¿ 
:
¿¿ 
$str
¿¿ "
)
¿¿" #
;
¿¿# $
}
ÀÀ 	
	protected
ÂÂ 
override
ÂÂ 
void
ÂÂ 
Down
ÂÂ  $
(
ÂÂ$ %
MigrationBuilder
ÂÂ% 5
migrationBuilder
ÂÂ6 F
)
ÂÂF G
{
ÃÃ 	
migrationBuilder
ÄÄ 
.
ÄÄ 
	DropTable
ÄÄ &
(
ÄÄ& '
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ !
)
ÅÅ! "
;
ÅÅ" #
migrationBuilder
ÇÇ 
.
ÇÇ 
	DropTable
ÇÇ &
(
ÇÇ& '
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ 
)
ÈÈ  
;
ÈÈ  !
migrationBuilder
ÊÊ 
.
ÊÊ 
	DropTable
ÊÊ &
(
ÊÊ& '
name
ËË 
:
ËË 
$str
ËË  
)
ËË  !
;
ËË! "
migrationBuilder
ÍÍ 
.
ÍÍ 
	DropTable
ÍÍ &
(
ÍÍ& '
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ 
)
ÎÎ  
;
ÎÎ  !
migrationBuilder
ÐÐ 
.
ÐÐ 
	DropTable
ÐÐ &
(
ÐÐ& '
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ 
)
ÑÑ 
;
ÑÑ  
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ 
)
ÔÔ 
;
ÔÔ  
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
×× 
:
×× 
$str
×× 
)
×× 
;
××  
}
ØØ 	
}
ÙÙ 
}ÚÚ 
rC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Repositories\ActorsRepository.cs
	namespace 	
	CodeFirst
 
. 
Repositories  
{ 
public 

class 
ActorsRepository !
:" #
BaseRepository$ 2
<2 3
Actors3 9
>9 :
{ 
public 
ActorsRepository 
(  
BaseDbContext  -
baseContext. 9
)9 :
:; <
base= A
(A B
baseContextB M
)M N
{		 	
}

 	
} 
} *
pC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Repositories\BaseRepository.cs
	namespace

 	
	CodeFirst


 
.

 
Repositories

  
{ 
public 

abstract 
class 
BaseRepository (
<( )
T) *
>* +
:, -
IRepository. 9
<9 :
T: ;
>; <
where= B
TC D
:E F
classG L
{ 
private 
readonly 
BaseDbContext &
_baseContext' 3
;3 4
private 
readonly 
DbSet 
< 
T  
>  !
_dbSet" (
;( )
	protected 
BaseRepository  
(  !
BaseDbContext! .
baseContext/ :
): ;
{ 	
_baseContext 
= 
baseContext &
;& '
_dbSet 
= 
_baseContext !
.! "
Set" %
<% &
T& '
>' (
(( )
)) *
;* +
} 	
public 
async 
Task 
AddAsync "
(" #
T# $
entity% +
)+ ,
{ 	
await 
_dbSet 
. 
AddAsync !
(! "
entity" (
)( )
;) *
} 	
public 
void 
Update 
( 
T 
entity #
)# $
{ 	
_dbSet 
. 
Attach 
( 
entity  
)  !
;! "
_baseContext 
. 
Entry 
( 
entity %
)% &
.& '
State' ,
=- .
EntityState/ :
.: ;
Modified; C
;C D
}   	
public"" 
void"" 
Delete"" 
("" 
T"" 
entity"" #
)""# $
{## 	
_dbSet$$ 
.$$ 
Remove$$ 
($$ 
entity$$  
)$$  !
;$$! "
}%% 	
public'' 
void'' 
Delete'' 
('' 

Expression'' %
<''% &
Func''& *
<''* +
T''+ ,
,'', -
bool''. 2
>''2 3
>''3 4
where''5 :
)'': ;
{(( 	
var)) 
objects)) 
=)) 
_dbSet))  
.))  !
Where))! &
())& '
where))' ,
))), -
.))- .
AsEnumerable)). :
()): ;
))); <
;))< =
foreach** 
(** 
var** 
obj** 
in** 
objects**  '
)**' (
_dbSet++ 
.++ 
Remove++ 
(++ 
obj++ !
)++! "
;++" #
},, 	
public.. 
async.. 
Task.. 
<.. 
T.. 
>.. 
GetByIdAsync.. )
(..) *
int..* -
id... 0
)..0 1
{// 	
return00 
await00 
_dbSet00 
.00  
	FindAsync00  )
(00) *
id00* ,
)00, -
;00- .
}11 	
public33 
async33 
Task33 
<33 
T33 
>33 
GetSingleAsync33 +
(33+ ,

Expression33, 6
<336 7
Func337 ;
<33; <
T33< =
,33= >
bool33? C
>33C D
>33D E
where33F K
)33K L
{44 	
return55 
await55 
_dbSet55 
.55  
FirstOrDefaultAsync55  3
(553 4
where554 9
)559 :
;55: ;
}66 	
public88 
async88 
Task88 
<88 
IEnumerable88 %
<88% &
T88& '
>88' (
>88( )
GetAllAsync88* 5
(885 6
)886 7
{99 	
return:: 
await:: 
_dbSet:: 
.::  
ToListAsync::  +
(::+ ,
)::, -
;::- .
};; 	
public== 
async== 
Task== 
<== 
IEnumerable== %
<==% &
T==& '
>==' (
>==( )
GetManyAsync==* 6
(==6 7

Expression==7 A
<==A B
Func==B F
<==F G
T==G H
,==H I
bool==J N
>==N O
>==O P
where==Q V
)==V W
{>> 	
return?? 
await?? 
_dbSet?? 
.??  
Where??  %
(??% &
where??& +
)??+ ,
.??, -
ToListAsync??- 8
(??8 9
)??9 :
;??: ;
}@@ 	
publicBB 
asyncBB 
TaskBB 
<BB 
boolBB 
>BB 
SaveChangesAsyncBB  0
(BB0 1
)BB1 2
{CC 	
returnDD 
awaitDD 
_baseContextDD %
.DD% &
SaveChangesAsyncDD& 6
(DD6 7
)DD7 8
>DD9 :
$numDD; <
;DD< =
}EE 	
}FF 
}GG ¡
sC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Repositories\ClientsRepository.cs
	namespace 	
	CodeFirst
 
. 
Repositories  
{ 
public 

class 
ClientsRepository "
:# $
BaseRepository% 3
<3 4
Clients4 ;
>; <
{ 
public 
ClientsRepository  
(  !
BaseDbContext! .
baseContext/ :
): ;
:< =
base> B
(B C
baseContextC N
)N O
{		 	
}

 	
} 
} 
rC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Repositories\CopiesRepository.cs
	namespace 	
	CodeFirst
 
. 
Repositories  
{ 
public 

class 
CopiesRepository !
:" #
BaseRepository$ 2
<2 3
Copies3 9
>9 :
{ 
public 
CopiesRepository 
(  
BaseDbContext  -
baseContext. 9
)9 :
:; <
base= A
(A B
baseContextB M
)M N
{		 	
}

 	
} 
} ©
uC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Repositories\EmployeesRepository.cs
	namespace 	
	CodeFirst
 
. 
Repositories  
{ 
public 

class 
EmployeesRepository $
:% &
BaseRepository' 5
<5 6
	Employees6 ?
>? @
{ 
public 
EmployeesRepository "
(" #
BaseDbContext# 0
baseContext1 <
)< =
:> ?
base@ D
(D E
baseContextE P
)P Q
{		 	
}

 	
} 
} 
rC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Repositories\MoviesRepository.cs
	namespace 	
	CodeFirst
 
. 
Repositories  
{ 
public 

class 
MoviesRepository !
:" #
BaseRepository$ 2
<2 3
Movies3 9
>9 :
{ 
public 
MoviesRepository 
(  
BaseDbContext  -
baseContext. 9
)9 :
:; <
base= A
(A B
baseContextB M
)M N
{		 	
}

 	
} 
} ¡
sC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Repositories\RentalsRepository.cs
	namespace 	
	CodeFirst
 
. 
Repositories  
{ 
public 

class 
RentalsRepository "
:# $
BaseRepository% 3
<3 4
Rentals4 ;
>; <
{ 
public 
RentalsRepository  
(  !
BaseDbContext! .
baseContext/ :
): ;
:< =
base> B
(B C
baseContextC N
)N O
{		 	
}

 	
} 
} ¥
tC:\Users\pkolosov\RiderProjects\CodeFirstEntityFrameworkCore\CodeFirst.DataAccess\Repositories\StarringRepository.cs
	namespace 	
	CodeFirst
 
. 
Repositories  
{ 
public 

class 
StarringRepository #
:$ %
BaseRepository& 4
<4 5
Starring5 =
>= >
{ 
public 
StarringRepository !
(! "
BaseDbContext" /
baseContext0 ;
); <
:= >
base? C
(C D
baseContextD O
)O P
{		 	
}

 	
} 
} 